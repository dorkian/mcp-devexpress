{
  "properties": [
    {
      "name": "Properties",
      "subMembers": [
        {
          "name": "Configuration",
          "type": null,
          "default": null,
          "description": "An object defining configuration properties for the Button UI component."
        },
        {
          "name": "activeStateEnabled",
          "type": "Boolean",
          "default": "true",
          "description": "Specifies whether the UI component changes its visual state as a result of user interaction."
        },
        {
          "name": "component",
          "type": null,
          "default": null,
          "description": "An alias for the [template] property specified in React. Accepts a custom component. Refer to [Using a Custom Component] for more information."
        },
        {
          "name": "focusStateEnabled",
          "type": "Boolean",
          "default": "true (desktop)",
          "description": null
        },
        {
          "name": "hoverStateEnabled",
          "type": "Boolean",
          "default": "true",
          "description": null
        },
        {
          "name": "icon",
          "type": "String",
          "default": "''",
          "description": "Specifies the icon to be displayed on the button."
        },
        {
          "name": "render",
          "type": null,
          "default": null,
          "description": "An alias for the [template] property specified in React. Accepts a rendering function. Refer to [Using a Rendering Function] for more information."
        },
        {
          "name": "stylingMode",
          "type": "Enums.ButtonStyle",
          "default": "'contained'",
          "description": "Specifies how the button is styled."
        },
        {
          "name": "template",
          "type": "template",
          "default": "'content'",
          "description": "Specifies a custom template for the Button UI component."
        },
        {
          "name": "text",
          "type": "String",
          "default": "''",
          "description": "The text displayed on the button."
        },
        {
          "name": "type",
          "type": "Enums.ButtonType | String",
          "default": "'normal'",
          "description": "Specifies the button type."
        },
        {
          "name": "useSubmitBehavior",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether the button submits an HTML form."
        },
        {
          "name": "validationGroup",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the name of the [validation group] to be accessed in the [click] event handler."
        }
      ]
    },
    {
      "name": "dxButton",
      "type": null,
      "default": null,
      "description": "The Button UI component is a simple button that performs specified commands when a user clicks it."
    }
  ],
  "Methods": [],
  "Events": [
    {
      "name": "onClick",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed when the Button is clicked or tapped."
    },
    {
      "name": "onContentReady",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component is rendered and each time the component is repainted."
    },
    {
      "name": "onDisposing",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed before the UI component is [disposed of].md '{basewidgetpath}/Methods/#dispose')."
    },
    {
      "name": "onInitialized",
      "type": "function(e)",
      "default": null,
      "description": "A function used in JavaScript frameworks to save the UI component instance."
    },
    {
      "name": "onOptionChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after a UI component property is changed."
    },
    {
      "name": "click",
      "type": "eventType",
      "default": null,
      "description": "Raised when the Button is clicked or tapped."
    }
  ],
  "Types": [
    {
      "name": "ClickEvent",
      "subMembers": [
        {
          "name": "ClickEvent",
          "type": "Object",
          "default": null,
          "description": "The type of the [click] event handler's argument."
        },
        {
          "name": "validationGroup",
          "type": "Object",
          "default": null,
          "description": null
        }
      ]
    },
    {
      "name": "ContentReadyEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [contentReady] event handler's argument."
    },
    {
      "name": "DisposingEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [disposing] event handler's argument."
    },
    {
      "name": "InitializedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [initialized] event handler's argument."
    },
    {
      "name": "OptionChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [optionChanged] event handler's argument."
    }
  ]
}
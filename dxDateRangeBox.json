{
  "properties": [
    {
      "name": "Properties",
      "subMembers": [
        {
          "name": "Configuration",
          "type": null,
          "default": null,
          "description": "An object that defines configuration properties for the DateRangeBox UI component."
        },
        {
          "name": "disableOutOfRangeSelection",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether the UI component disables date selection before the start date and after the end date."
        },
        {
          "name": "endDate",
          "type": "Date | Number | String | null",
          "default": "null",
          "description": "Specifies the range's end date."
        },
        {
          "name": "endDateInputAttr",
          "type": "any",
          "default": "{}",
          "description": "Specifies the attributes passed to the end date input field."
        },
        {
          "name": "endDateLabel",
          "type": "String",
          "default": "'End Date'",
          "description": "Specifies the label of the end date input field."
        },
        {
          "name": "endDateName",
          "type": "String",
          "default": "''",
          "description": "Specifies the **name** attribute of the end date input field."
        },
        {
          "name": "endDateOutOfRangeMessage",
          "type": "String",
          "default": "'End date is out of range'",
          "description": "Specifies the message displayed if the specified end date is later than the [max] value or earlier than the [min] value."
        },
        {
          "name": "endDatePlaceholder",
          "type": "String",
          "default": "''",
          "description": "Specifies a placeholder for the end date input field."
        },
        {
          "name": "endDateText",
          "type": "String",
          "default": null,
          "description": "Returns the text displayed by the end date input field."
        },
        {
          "name": "inputAttr",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "invalidEndDateMessage",
          "type": "String",
          "default": "'End value must be a date'",
          "description": "Specifies a message for invalid end date input."
        },
        {
          "name": "invalidStartDateMessage",
          "type": "String",
          "default": "'Start value must be a date'",
          "description": "Specifies a message for invalid start date input."
        },
        {
          "name": "isDirty",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "label",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "maxLength",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "multiView",
          "type": "Boolean",
          "default": "true, false (Android, iOS)",
          "description": "Specifies whether the UI component displays a single-month calendar or a multi-month calendar."
        },
        {
          "name": "name",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "openOnFieldClick",
          "type": "Boolean",
          "default": "true",
          "description": "Specifies whether a user can open the popup calendar by clicking an input field."
        },
        {
          "name": "placeholder",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "startDate",
          "type": "Date | Number | String | null",
          "default": "null",
          "description": "Specifies the start date of date range."
        },
        {
          "name": "startDateInputAttr",
          "type": "any",
          "default": "{}",
          "description": "Specifies the attributes passed to the start date input field."
        },
        {
          "name": "startDateLabel",
          "type": "String",
          "default": "'Start Date'",
          "description": "Specifies a label of the start date input field."
        },
        {
          "name": "startDateName",
          "type": "String",
          "default": "''",
          "description": "Specifies the **name** attribute of the start date input field."
        },
        {
          "name": "startDateOutOfRangeMessage",
          "type": "String",
          "default": "'Start date is out of range'",
          "description": "Specifies the message displayed if the specified start date is later than the [max] value or earlier than the [min] value."
        },
        {
          "name": "startDatePlaceholder",
          "type": "String",
          "default": "''",
          "description": "Specifies a placeholder for the start date input field."
        },
        {
          "name": "startDateText",
          "type": "String",
          "default": null,
          "description": "Returns the text displayed by the start date input field."
        },
        {
          "name": "text",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "value",
          "type": "Array<Date, Number, String, null>",
          "default": "[null,null]",
          "description": "An array that specifies the selected range (start and end dates)."
        }
      ]
    },
    {
      "name": "dxDateRangeBox",
      "type": null,
      "default": null,
      "description": "DateRangeBox is a UI component that allows a user to select a date range (pick or enter start and end dates)."
    }
  ],
  "Methods": [
    {
      "name": "endDateField()",
      "type": null,
      "default": null,
      "description": "Gets the `<input>` element of the UI component's end date field."
    },
    {
      "name": "field()",
      "type": null,
      "default": null,
      "description": null
    },
    {
      "name": "reset(value)",
      "type": null,
      "default": null,
      "description": "Resets the [value] property to the value passed as an argument."
    },
    {
      "name": "startDateField()",
      "type": null,
      "default": null,
      "description": "Gets the `<input>` element of the UI component's start date field."
    }
  ],
  "Events": [
    {
      "name": "onChange",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component loses focus after the text field's content was changed using the keyboard."
    },
    {
      "name": "onClosed",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed once the drop-down editor is closed."
    },
    {
      "name": "onContentReady",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component is rendered and each time the component is repainted."
    },
    {
      "name": "onCopy",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component's input has been copied."
    },
    {
      "name": "onCut",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component's input has been cut."
    },
    {
      "name": "onDisposing",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed before the UI component is [disposed of].md '{basewidgetpath}/Methods/#dispose')."
    },
    {
      "name": "onEnterKey",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the Enter key has been pressed while the UI component is focused."
    },
    {
      "name": "onFocusIn",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component gets focus."
    },
    {
      "name": "onFocusOut",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component loses focus."
    },
    {
      "name": "onInitialized",
      "type": "function(e)",
      "default": null,
      "description": "A function used in JavaScript frameworks to save the UI component instance."
    },
    {
      "name": "onInput",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed each time the UI component's input is changed while the UI component is focused."
    },
    {
      "name": "onKeyDown",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a user is pressing a key on the keyboard."
    },
    {
      "name": "onKeyUp",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a user releases a key on the keyboard."
    },
    {
      "name": "onOpened",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed once the drop-down editor is opened."
    },
    {
      "name": "onOptionChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after a UI component property is changed."
    },
    {
      "name": "onPaste",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component's input has been pasted."
    },
    {
      "name": "onValueChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after the UI component's [value] is changed."
    }
  ],
  "Types": [
    {
      "name": "ChangeEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [change] event handler's argument."
    },
    {
      "name": "ClosedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [closed] event handler's argument."
    },
    {
      "name": "ContentReadyEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [contentReady] event handler's argument."
    },
    {
      "name": "CopyEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [copy] event handler's argument."
    },
    {
      "name": "CutEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [cut] event handler's argument."
    },
    {
      "name": "DisposingEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [disposing] event handler's argument."
    },
    {
      "name": "EnterKeyEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [enterKey] event handler's argument."
    },
    {
      "name": "FocusInEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [focusIn] event handler's argument."
    },
    {
      "name": "FocusOutEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [focusOut] event handler's argument."
    },
    {
      "name": "InitializedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [initialized] event handler's argument."
    },
    {
      "name": "InputEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [input] event handler's argument."
    },
    {
      "name": "KeyDownEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [keyDown] event handler's argument."
    },
    {
      "name": "KeyUpEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [keyUp] event handler's argument."
    },
    {
      "name": "OpenedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [opened] event handler's argument."
    },
    {
      "name": "OptionChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [optionChanged] event handler's argument."
    },
    {
      "name": "PasteEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [paste] event handler's argument."
    },
    {
      "name": "ValueChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [valueChanged] event handler's argument."
    }
  ]
}
{
  "properties": [
    {
      "name": "Properties",
      "subMembers": [
        {
          "name": "Configuration",
          "type": null,
          "default": null,
          "description": "An object defining configuration properties for the NumberBox UI component."
        },
        {
          "name": "buttons",
          "type": "Array<Enums.NumberBoxPredefinedButton, TextEditorButton>",
          "default": "undefined",
          "description": null
        },
        {
          "name": "format",
          "type": "Format",
          "default": "''",
          "description": "Specifies the value's display format and controls user input accordingly."
        },
        {
          "name": "inputAttr",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "invalidValueMessage",
          "type": "String",
          "default": "'Value must be a number'",
          "description": "Specifies the text of the message displayed if the specified value is not a number."
        },
        {
          "name": "mask",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "maskChar",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "maskInvalidMessage",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "maskRules",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "max",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "The maximum value accepted by the number box."
        },
        {
          "name": "min",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "The minimum value accepted by the number box."
        },
        {
          "name": "mode",
          "type": "Enums.NumberBoxType",
          "default": "'text', 'number' (mobile_devices)",
          "description": "Specifies the value to be passed to the <a href=\"http://www.w3schools.com/tags/att_input_type.asp\" target=\"_blank\">type</a> attribute of the underlying `<input>` element."
        },
        {
          "name": "showMaskMode",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "showSpinButtons",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether to show the buttons that change the [value] by a [step]."
        },
        {
          "name": "spellcheck",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "step",
          "type": "Number",
          "default": "1",
          "description": "Specifies how much the UI component's value changes when using the spin buttons, Up/Down arrow keys, or mouse wheel."
        },
        {
          "name": "text",
          "type": null,
          "default": null,
          "description": "A property that holds the UI component's [value] with applied [format]."
        },
        {
          "name": "useLargeSpinButtons",
          "type": "Boolean",
          "default": "true, false (desktop)",
          "description": "Specifies whether to use touch friendly spin buttons. Applies only if [showSpinButtons] is **true**."
        },
        {
          "name": "useMaskedValue",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "validationMessagePosition",
          "type": "'required',",
          "default": null,
          "description": null
        },
        {
          "name": "validationStatus",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "value",
          "type": "Number",
          "default": "0",
          "description": "The current number box value."
        }
      ]
    },
    {
      "name": "dxNumberBox",
      "type": null,
      "default": null,
      "description": "The NumberBox is a UI component that displays a numeric value and allows a user to modify it by typing in a value, and incrementing or decrementing it using the keyboard or mouse."
    }
  ],
  "Methods": [
    {
      "name": "reset(value)",
      "type": null,
      "default": null,
      "description": "Resets the [value] property to the value passed as an argument."
    }
  ],
  "Events": [
    {
      "name": "onChange",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component loses focus after the text field's content was changed using the keyboard."
    },
    {
      "name": "onContentReady",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component is rendered and each time the component is repainted."
    },
    {
      "name": "onCopy",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component's input has been copied."
    },
    {
      "name": "onCut",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component's input has been cut."
    },
    {
      "name": "onDisposing",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed before the UI component is [disposed of].md '{basewidgetpath}/Methods/#dispose')."
    },
    {
      "name": "onEnterKey",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the Enter key has been pressed while the UI component is focused."
    },
    {
      "name": "onFocusIn",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component gets focus."
    },
    {
      "name": "onFocusOut",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component loses focus."
    },
    {
      "name": "onInitialized",
      "type": "function(e)",
      "default": null,
      "description": "A function used in JavaScript frameworks to save the UI component instance."
    },
    {
      "name": "onInput",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed each time the UI component's input is changed while the UI component is focused."
    },
    {
      "name": "onKeyDown",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a user is pressing a key on the keyboard."
    },
    {
      "name": "onKeyUp",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a user releases a key on the keyboard."
    },
    {
      "name": "onOptionChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after a UI component property is changed."
    },
    {
      "name": "onPaste",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component's input has been pasted."
    },
    {
      "name": "onValueChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after the UI component's [value] is changed."
    }
  ],
  "Types": [
    {
      "name": "ChangeEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [change] event handler's argument."
    },
    {
      "name": "ContentReadyEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [contentReady] event handler's argument."
    },
    {
      "name": "CopyEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [copy] event handler's argument."
    },
    {
      "name": "CutEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [cut] event handler's argument."
    },
    {
      "name": "DisposingEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [disposing] event handler's argument."
    },
    {
      "name": "EnterKeyEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [enterKey] event handler's argument."
    },
    {
      "name": "FocusInEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [focusIn] event handler's argument."
    },
    {
      "name": "FocusOutEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [focusOut] event handler's argument."
    },
    {
      "name": "InitializedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [initialized] event handler's argument."
    },
    {
      "name": "InputEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [input] event handler's argument."
    },
    {
      "name": "KeyDownEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [keyDown] event handler's argument."
    },
    {
      "name": "KeyUpEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [keyUp] event handler's argument."
    },
    {
      "name": "NumberBoxPredefinedButton",
      "type": "Union",
      "default": null,
      "description": "Specifies a custom button for the input text field."
    },
    {
      "name": "NumberBoxType",
      "type": "Union",
      "default": null,
      "description": "Specifies the value to be passed to the <a href=\"http://www.w3schools.com/tags/att_input_type.asp\" target=\"_blank\">type</a> attribute of the underlying `<input>` element."
    },
    {
      "name": "OptionChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [optionChanged] event handler's argument."
    },
    {
      "name": "PasteEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [paste] event handler's argument."
    },
    {
      "name": "ValueChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [valueChanged] event handler's argument."
    }
  ]
}
{
  "properties": [
    {
      "name": "Properties",
      "subMembers": [
        {
          "name": "Configuration",
          "type": null,
          "default": null,
          "description": "An object defining configuration properties for the Accordion UI component."
        },
        {
          "name": "animationDuration",
          "type": "Number",
          "default": "300, 200 (Fluent, Material)",
          "description": "A number specifying the time in milliseconds spent on the animation of the expanding or collapsing of a panel."
        },
        {
          "name": "collapsible",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether all items can be collapsed or whether at least one item must always be expanded."
        },
        {
          "name": "dataSource",
          "type": "String | Array<String, dxAccordionItem, any> | Store | DataSource | DataSource_Options | null",
          "default": "null",
          "description": null
        },
        {
          "name": "deferRendering",
          "type": "Boolean",
          "default": "true",
          "description": "Specifies whether to render the panel's content when it is displayed. If **false**, the content is rendered immediately."
        },
        {
          "name": "focusStateEnabled",
          "type": "Boolean",
          "default": "true (desktop)",
          "description": null
        },
        {
          "name": "height",
          "type": "Number | String | undefined",
          "default": "undefined",
          "description": "Specifies the UI component's height."
        },
        {
          "name": "hoverStateEnabled",
          "type": "Boolean",
          "default": "true",
          "description": null
        },
        {
          "name": "itemComponent",
          "type": null,
          "default": null,
          "description": "An alias for the [itemTemplate] property specified in React. Accepts a custom component. Refer to [Using a Custom Component] for more information."
        },
        {
          "name": "itemRender",
          "type": null,
          "default": null,
          "description": "An alias for the [itemTemplate] property specified in React. Accepts a rendering function. Refer to [Using a Rendering Function] for more information."
        },
        {
          "name": "itemTemplate",
          "type": "template",
          "default": "'item'",
          "description": "Specifies a custom template for items."
        },
        {
          "name": "itemTitleComponent",
          "type": null,
          "default": null,
          "description": "An alias for the [itemTitleTemplate] property specified in React. Accepts a custom component. Refer to [Using a Custom Component] for more information."
        },
        {
          "name": "itemTitleRender",
          "type": null,
          "default": null,
          "description": "An alias for the [itemTitleTemplate] property specified in React. Accepts a rendering function. Refer to [Using a Rendering Function] for more information."
        },
        {
          "name": "itemTitleTemplate",
          "type": "template",
          "default": "'title'",
          "description": "Specifies a custom template for item titles."
        },
        {
          "name": "items",
          "type": "Array<String, dxAccordionItem, any>",
          "default": null,
          "description": null
        },
        {
          "name": "multiple",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether the UI component can expand several items or only a single item at once."
        },
        {
          "name": "repaintChangesOnly",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether to repaint only those elements whose data changed."
        },
        {
          "name": "selectedIndex",
          "type": "Number",
          "default": "0",
          "description": "The index number of the currently expanded item."
        },
        {
          "name": "selectedItem",
          "type": null,
          "default": null,
          "description": "The expanded item object."
        },
        {
          "name": "selectedItemKeys",
          "type": null,
          "default": null,
          "description": "Specifies an array of currently expanded item keys."
        },
        {
          "name": "selectedItems",
          "type": null,
          "default": null,
          "description": "An array of currently expanded item objects."
        }
      ]
    },
    {
      "name": "dxAccordion",
      "type": null,
      "default": null,
      "description": "The Accordion UI component contains several panels displayed one under another. These panels can be collapsed or expanded by an end user, which makes this UI component very useful for presenting information in a limited amount of space."
    }
  ],
  "Methods": [
    {
      "name": "collapseItem(index)",
      "type": null,
      "default": null,
      "description": "Collapses an item with a specific index."
    },
    {
      "name": "expandItem(index)",
      "type": null,
      "default": null,
      "description": "Expands an item with a specific index."
    },
    {
      "name": "updateDimensions()",
      "type": null,
      "default": null,
      "description": "Updates the dimensions of the UI component contents."
    }
  ],
  "Events": [
    {
      "name": "onContentReady",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component is rendered and each time the component is repainted."
    },
    {
      "name": "onDisposing",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed before the UI component is [disposed of].md '{basewidgetpath}/Methods/#dispose')."
    },
    {
      "name": "onInitialized",
      "type": "function(e)",
      "default": null,
      "description": "A function used in JavaScript frameworks to save the UI component instance."
    },
    {
      "name": "onItemClick",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a collection item is clicked or tapped."
    },
    {
      "name": "onItemContextMenu",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a collection item is right-clicked or pressed."
    },
    {
      "name": "onItemHold",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a collection item has been held for a [specified period]."
    },
    {
      "name": "onItemRendered",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after a collection item is rendered."
    },
    {
      "name": "onItemTitleClick",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed when an accordion item's title is clicked or tapped."
    },
    {
      "name": "onOptionChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after a UI component property is changed."
    },
    {
      "name": "onSelectionChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a collection item is selected or selection is canceled."
    },
    {
      "name": "onSelectionChanging",
      "type": null,
      "default": null,
      "description": null
    },
    {
      "name": "itemTitleClick",
      "type": "eventType",
      "default": null,
      "description": "Raised when an accordion item's title is clicked or tapped."
    },
    {
      "name": "selectionChanged",
      "type": null,
      "default": null,
      "description": "Raised when a collection item is expanded or collapsed."
    },
    {
      "name": "selectionChanging",
      "type": "eventType",
      "default": null,
      "description": null
    }
  ],
  "Types": [
    {
      "name": "ContentReadyEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [contentReady] event handler's argument."
    },
    {
      "name": "DisposingEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [disposing] event handler's argument."
    },
    {
      "name": "InitializedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [initialized] event handler's argument."
    },
    {
      "name": "ItemClickEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [itemClick] event handler's argument."
    },
    {
      "name": "ItemContextMenuEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [itemContextMenu] event handler's argument."
    },
    {
      "name": "ItemHoldEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [itemHold] event handler's argument."
    },
    {
      "name": "ItemRenderedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [itemRendered] event handler's argument."
    },
    {
      "name": "ItemTitleClickEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [itemTitleClick] event handler's argument."
    },
    {
      "name": "OptionChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [optionChanged] event handler's argument."
    },
    {
      "name": "SelectionChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [selectionChanged] event handler's argument."
    }
  ]
}
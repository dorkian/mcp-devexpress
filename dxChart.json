{
  "properties": [
    {
      "name": "Properties",
      "subMembers": [
        {
          "name": "Configuration",
          "type": null,
          "default": null,
          "description": "This section describes properties that configure the contents, behavior and appearance of the Chart UI component."
        },
        {
          "name": "adjustOnZoom",
          "type": "Boolean",
          "default": "true",
          "description": "Specifies whether to adjust the value axis's [visualRange] when the [argument axis] is being [zoomed or panned]."
        },
        {
          "name": "annotations",
          "subMembers": [
            {
              "name": "annotations",
              "type": "Array<dxChartAnnotationConfig, any>",
              "default": null,
              "description": "Specifies the annotation collection."
            },
            {
              "name": "name",
              "type": "String | undefined",
              "default": "undefined",
              "description": "Specifies the annotation's name."
            }
          ]
        },
        {
          "name": "argumentAxis",
          "subMembers": [
            {
              "name": "aggregationGroupWidth",
              "type": "Number",
              "default": "undefined",
              "description": "Specifies the length of aggregation intervals in pixels. Applies only to axes of continuous and logarithmic [types]. May be ignored in favor of the [aggregationInterval] property."
            },
            {
              "name": "aggregationInterval",
              "type": "Number | Object | Enums.TimeInterval",
              "default": null,
              "description": "Specifies the length of aggregation intervals in axis units. Applies only to axes of continuous and logarithmic [types]."
            },
            {
              "name": "argumentAxis",
              "type": "viz/chart:ArgumentAxis",
              "default": null,
              "description": "Configures the argument axis."
            },
            {
              "name": "argumentType",
              "type": "Enums.ChartsDataType",
              "default": "undefined",
              "description": "Casts arguments to a specified data type."
            },
            {
              "name": "axisDivisionFactor",
              "type": "Number",
              "default": "70",
              "description": "Specifies the minimum distance between two neighboring major ticks in pixels. Applies only to the axes of the *\"continuous\"* and *\"logarithmic\"* [types]."
            },
            {
              "name": "breaks",
              "type": "Array<ScaleBreak>",
              "default": "undefined",
              "description": "Declares a scale break collection. Applies only if the axis' [type] is *\"continuous\"* or *\"logarithmic\"*."
            },
            {
              "name": "categories",
              "type": "Array<Number, String, Date>",
              "default": null,
              "description": "Specifies the order of categories on an axis of the *\"discrete\"* [type]."
            },
            {
              "name": "constantLineStyle",
              "subMembers": [
                {
                  "name": "constantLineStyle",
                  "type": "viz/chart:ArgumentAxisConstantLineStyle",
                  "default": null,
                  "description": "Specifies the appearance of those constant lines that belong to the argument axis."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "horizontalAlignment",
                      "type": "Enums.HorizontalAlignment",
                      "default": "'right'",
                      "description": "Aligns constant line labels in the horizontal direction."
                    },
                    {
                      "name": "label",
                      "type": "viz/chart:ArgumentAxisConstantLineStyleLabel",
                      "default": null,
                      "description": "Specifies the appearance of the labels of those constant lines that belong to the argument axis."
                    },
                    {
                      "name": "verticalAlignment",
                      "type": "Enums.VerticalAlignment",
                      "default": "'top'",
                      "description": "Aligns constant line labels in the vertical direction."
                    }
                  ]
                }
              ]
            },
            {
              "name": "constantLines",
              "subMembers": [
                {
                  "name": "constantLines",
                  "type": "Array<viz/chart:ArgumentAxisConstantLines>",
                  "default": null,
                  "description": "Declares a collection of constant lines belonging to the argument axis."
                },
                {
                  "name": "displayBehindSeries",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Specifies whether to display the constant line behind or in front of the series."
                },
                {
                  "name": "extendAxis",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Specifies whether to extend the axis's default [visual range] to display the constant line."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "horizontalAlignment",
                      "type": "Enums.HorizontalAlignment",
                      "default": "'right'",
                      "description": "Aligns constant line labels in the horizontal direction."
                    },
                    {
                      "name": "label",
                      "type": "viz/chart:ArgumentAxisConstantLinesLabel",
                      "default": null,
                      "description": "Configures the constant line label."
                    },
                    {
                      "name": "text",
                      "type": "String",
                      "default": "undefined",
                      "description": "Specifies the text of a constant line label. By default, equals to the value of the constant line."
                    },
                    {
                      "name": "verticalAlignment",
                      "type": "Enums.VerticalAlignment",
                      "default": "'top'",
                      "description": "Aligns constant line labels in the vertical direction."
                    }
                  ]
                },
                {
                  "name": "value",
                  "type": "Number | Date | String",
                  "default": "undefined",
                  "description": "Specifies the value indicated by a constant line. Setting this property is necessary."
                }
              ]
            },
            {
              "name": "customPosition",
              "type": "Number | Date | String",
              "default": "undefined",
              "description": "Specifies the position of the argument axis on the value axis."
            },
            {
              "name": "customPositionAxis",
              "type": "String",
              "default": "undefined",
              "description": "Specifies the [name] of a value axis on which the argument axis should be positioned. Applies only to [multi-axis charts]."
            },
            {
              "name": "endOnTick",
              "type": "Boolean",
              "default": "false",
              "description": null
            },
            {
              "name": "holidays",
              "type": "Array<Date, String> | Array<Number>",
              "default": "undefined",
              "description": "Dates to be excluded from the axis when [workdaysOnly] is **true**."
            },
            {
              "name": "hoverMode",
              "type": "Enums.ArgumentAxisHoverMode",
              "default": "'none'",
              "description": "Specifies chart elements to be highlighted when a user points to an axis label."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeHint",
                  "type": "function(argument)",
                  "default": null,
                  "description": "Specifies the hint that appears when a user points to an axis label."
                },
                {
                  "name": "customizeText",
                  "type": "function(argument)",
                  "default": null,
                  "description": "Customizes the text displayed by axis labels."
                },
                {
                  "name": "format",
                  "type": "Format",
                  "default": "undefined",
                  "description": "Formats a value before it is displayed in an axis label."
                },
                {
                  "name": "label",
                  "type": "viz/chart:ArgumentAxisLabel",
                  "default": null,
                  "description": "Configures the labels of the argument axis."
                }
              ]
            },
            {
              "name": "linearThreshold",
              "type": "Number",
              "default": "undefined",
              "description": "Specifies a value used to calculate the range on a [logarithmic axis] within which the axis should be linear. Applies only if the data source contains negative values or zeroes."
            },
            {
              "name": "logarithmBase",
              "type": "Number",
              "default": "10",
              "description": "Specifies the value to be raised to a power when generating ticks for an axis of the *\"logarithmic\"* [type]."
            },
            {
              "name": "minVisualRangeLength",
              "type": "Number | Object | Enums.TimeInterval",
              "default": "undefined",
              "description": "Specifies the minimum length of the [visual range]."
            },
            {
              "name": "minorTickCount",
              "type": "Number",
              "default": "undefined",
              "description": "Specifies how many [minor ticks] to place between two neighboring major ticks."
            },
            {
              "name": "minorTickInterval",
              "type": "Number | Object | Enums.TimeInterval",
              "default": null,
              "description": "Specifies the interval between [minor ticks]. Applies only to the axes of the *\"continuous\"* [type]."
            },
            {
              "name": "offset",
              "type": "Number",
              "default": "undefined",
              "description": "Specifies the shift in pixels of the argument axis."
            },
            {
              "name": "position",
              "type": "Enums.Position",
              "default": "'bottom'",
              "description": "Relocates the argument axis."
            },
            {
              "name": "singleWorkdays",
              "type": "Array<Date, String> | Array<Number>",
              "default": "undefined",
              "description": "Dates to be included on the axis when [workdaysOnly] is **true**."
            },
            {
              "name": "strips",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "undefined",
                  "description": "Specifies the color of the strip."
                },
                {
                  "name": "endValue",
                  "type": "Number | Date | String",
                  "default": "undefined",
                  "description": "Along with the **startValue** property, limits the strip."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "label",
                      "type": "viz/chart:ArgumentAxisStripsLabel",
                      "default": null,
                      "description": "Configures the strip label."
                    },
                    {
                      "name": "text",
                      "type": "String",
                      "default": "undefined",
                      "description": "Specifies the text of the strip label."
                    }
                  ]
                },
                {
                  "name": "startValue",
                  "type": "Number | Date | String",
                  "default": "undefined",
                  "description": "Along with the **endValue** property, limits the strip."
                },
                {
                  "name": "strips",
                  "type": "Array<viz/chart:ArgumentAxisStrips>",
                  "default": null,
                  "description": "Declares a collection of strips belonging to the argument axis."
                }
              ]
            },
            {
              "name": "tickInterval",
              "type": "Number | Object | Enums.TimeInterval",
              "default": null,
              "description": "Specifies the interval between [major ticks]."
            },
            {
              "name": "title",
              "subMembers": [
                {
                  "name": "text",
                  "type": "String",
                  "default": "undefined",
                  "description": "Specifies the text of the axis title."
                },
                {
                  "name": "title",
                  "type": "viz/chart:ArgumentAxisTitle",
                  "default": null,
                  "description": "Configures the axis title."
                }
              ]
            },
            {
              "name": "type",
              "type": "Enums.AxisScaleType",
              "default": "undefined",
              "description": "Specifies the type of the argument axis."
            },
            {
              "name": "valueMarginsEnabled",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "visualRange",
              "type": "Object | Array<Number, String, Date>",
              "default": null,
              "description": "Defines the axis' displayed range. Cannot be wider than the [wholeRange]."
            },
            {
              "name": "visualRangeUpdateMode",
              "type": "Enums.VisualRangeUpdateMode",
              "default": "'auto'",
              "description": "Specifies how the component changes **argumentAxis**.[visualRange] when chart data is updated."
            },
            {
              "name": "wholeRange",
              "type": "Object | Array<Number, String, Date>",
              "default": "undefined",
              "description": "Defines the range where the axis can be [zoomed and panned]. To limit the visual range, specify the [visualRange] property."
            },
            {
              "name": "workWeek",
              "type": "Array<Number>",
              "default": "[1, 2, 3, 4, 5]",
              "description": "Specifies which days are workdays. The array can contain values from 0 (Sunday) to 6 (Saturday). Applies only if [workdaysOnly] is **true**."
            },
            {
              "name": "workdaysOnly",
              "type": "Boolean",
              "default": "false",
              "description": "Leaves only workdays on the axis: the [work week] days plus [single workdays] minus [holidays]. Applies only if the axis' [argumentType] is *\"datetime\"*."
            }
          ]
        },
        {
          "name": "autoHidePointMarkers",
          "type": "Boolean",
          "default": "true",
          "description": "Specifies whether to hide [series point markers] automatically to reduce visual clutter."
        },
        {
          "name": "barGroupPadding",
          "type": "Number",
          "default": "0.3",
          "description": "Controls the padding and consequently the width of a group of bars with the same argument using relative units. Ignored if the [barGroupWidth] property is set."
        },
        {
          "name": "barGroupWidth",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies a fixed width for groups of bars with the same argument, measured in pixels. Takes precedence over the [barGroupPadding] property."
        },
        {
          "name": "commonAnnotationSettings",
          "type": "dxChartCommonAnnotationConfig",
          "default": null,
          "description": "Specifies settings common for all annotations in the chart."
        },
        {
          "name": "commonAxisSettings",
          "subMembers": [
            {
              "name": "aggregatedPointsPosition",
              "type": "Enums.AggregatedPointsPosition",
              "default": "'betweenTicks'",
              "description": "Specifies the start position of the aggregated series points in the aggregation interval. Applies only to axes of continuous and logarithmic [types]."
            },
            {
              "name": "allowDecimals",
              "type": "Boolean",
              "default": "undefined",
              "description": "Specifies whether to allow decimal values on the axis. When **false**, the axis contains integer values only."
            },
            {
              "name": "breakStyle",
              "subMembers": [
                {
                  "name": "breakStyle",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the scale breaks' appearance."
                },
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#ababab'",
                  "description": "Specifies the scale breaks' color."
                },
                {
                  "name": "line",
                  "type": "Enums.ScaleBreakLineStyle",
                  "default": "'waved'",
                  "description": "Specifies the scale breaks' line style."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "5",
                  "description": "Specifies the scale breaks' width in pixels."
                }
              ]
            },
            {
              "name": "color",
              "type": "String",
              "default": "'#767676'",
              "description": "Specifies the color of the axis line."
            },
            {
              "name": "commonAxisSettings",
              "type": "viz/chart:CommonAxisSettings",
              "default": null,
              "description": "Defines common settings for both the argument and value axis in a chart."
            },
            {
              "name": "constantLineStyle",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#000000'",
                  "description": "Specifies the color of constant lines."
                },
                {
                  "name": "constantLineStyle",
                  "type": "viz/chart:CommonAxisSettingsConstantLineStyle",
                  "default": null,
                  "description": "Configures the appearance of all constant lines in the UI component."
                },
                {
                  "name": "dashStyle",
                  "type": "Enums.DashStyle",
                  "default": "'solid'",
                  "description": "Specifies the dash style of constant lines."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "font",
                      "subMembers": [
                        {
                          "name": "color",
                          "type": null,
                          "default": "'#767676'",
                          "description": null
                        },
                        {
                          "name": "font",
                          "type": "Object",
                          "default": null,
                          "description": "Specifies font properties for constant line labels."
                        }
                      ]
                    },
                    {
                      "name": "label",
                      "type": "viz/chart:CommonAxisSettingsConstantLineStyleLabel",
                      "default": null,
                      "description": "Configures constant line labels."
                    },
                    {
                      "name": "position",
                      "type": "Enums.RelativePosition",
                      "default": "'inside'",
                      "description": "Specifies the position of constant line labels on the chart plot."
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "true",
                      "description": "Makes constant line labels visible."
                    }
                  ]
                },
                {
                  "name": "paddingLeftRight",
                  "type": "Number",
                  "default": "10",
                  "description": "Generates a pixel-measured empty space between the left/right side of a constant line and the constant line label."
                },
                {
                  "name": "paddingTopBottom",
                  "type": "Number",
                  "default": "10",
                  "description": "Generates a pixel-measured empty space between the top/bottom side of a constant line and the constant line label."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies the width of constant lines in pixels."
                }
              ]
            },
            {
              "name": "discreteAxisDivisionMode",
              "type": "Enums.DiscreteAxisDivisionMode",
              "default": "'betweenLabels'",
              "description": "Specifies whether ticks and grid lines should cross axis labels or lie between them. Applies only to the axes of the *\"discrete\"* type."
            },
            {
              "name": "endOnTick",
              "type": "Boolean",
              "default": "undefined",
              "description": "Specifies whether to force the axis to start and end on ticks."
            },
            {
              "name": "grid",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#d3d3d3'",
                  "description": "Specifies the color of grid lines."
                },
                {
                  "name": "grid",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the grid."
                },
                {
                  "name": "opacity",
                  "type": "Number | undefined",
                  "default": "undefined",
                  "description": "Specifies how transparent grid lines should be."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Makes grid lines visible."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies the width of grid lines in pixels."
                }
              ]
            },
            {
              "name": "inverted",
              "type": "Boolean",
              "default": "false",
              "description": "Inverts the axis."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "alignment",
                  "type": "Enums.HorizontalAlignment",
                  "default": "undefined",
                  "description": "Aligns axis labels in relation to ticks."
                },
                {
                  "name": "component",
                  "type": null,
                  "default": null,
                  "description": "An alias for the [template] property specified in React. Accepts a custom component. Refer to [Using a Custom Component] for more information."
                },
                {
                  "name": "displayMode",
                  "type": "Enums.ChartLabelDisplayMode",
                  "default": "'standard'",
                  "description": "Allows you to rotate or stagger axis labels. Applies to the horizontal axis only."
                },
                {
                  "name": "font",
                  "subMembers": [
                    {
                      "name": "color",
                      "type": null,
                      "default": "'#767676'",
                      "description": null
                    },
                    {
                      "name": "font",
                      "type": "Object",
                      "default": null,
                      "description": "Specifies font properties for axis labels."
                    }
                  ]
                },
                {
                  "name": "indentFromAxis",
                  "type": "Number",
                  "default": "10",
                  "description": "Adds a pixel-measured empty space between an axis and its labels."
                },
                {
                  "name": "label",
                  "type": "viz/chart:CommonAxisSettingsLabel",
                  "default": null,
                  "description": "Configures axis labels."
                },
                {
                  "name": "overlappingBehavior",
                  "type": "Enums.ChartsAxisLabelOverlap",
                  "default": "'hide'",
                  "description": "Decides how to arrange axis labels when there is not enough space to display all of them."
                },
                {
                  "name": "position",
                  "type": "Enums.RelativePosition | Enums.Position",
                  "default": "'outside'",
                  "description": "Specifies the position of labels relative to the chart or its axis."
                },
                {
                  "name": "render",
                  "type": null,
                  "default": null,
                  "description": "An alias for the [template] property specified in React. Accepts a rendering function. Refer to [Using a Rendering Function] for more information."
                },
                {
                  "name": "rotationAngle",
                  "type": "Number",
                  "default": "90",
                  "description": "Specifies the rotation angle of axis labels. Applies only if **displayMode** or **overlappingBehavior** is *\"rotate\"*."
                },
                {
                  "name": "staggeringSpacing",
                  "type": "Number",
                  "default": "5",
                  "description": "Adds a pixel-measured empty space between two staggered rows of axis labels. Applies only if **displayMode** or **overlappingBehavior** is *\"stagger\"*."
                },
                {
                  "name": "template",
                  "type": "template",
                  "default": "undefined",
                  "description": "Specifies a custom template for axis labels."
                },
                {
                  "name": "textOverflow",
                  "type": "Enums.TextOverflow",
                  "default": "'none'",
                  "description": "Specifies what to do with axis labels that overflow the allocated space after applying [wordWrap]: hide, truncate them and display an ellipsis, or do nothing."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Shows/hides axis labels."
                },
                {
                  "name": "wordWrap",
                  "type": "Enums.WordWrap",
                  "default": "'normal'",
                  "description": "Specifies how to wrap texts that do not fit into a single line."
                }
              ]
            },
            {
              "name": "maxValueMargin",
              "type": "Number",
              "default": "undefined",
              "description": "Controls the empty space between the maximum series points and the axis. Applies only to the axes of the *\"continuous\"* and *\"logarithmic\"* type."
            },
            {
              "name": "minValueMargin",
              "type": "Number",
              "default": "undefined",
              "description": "Controls the empty space between the minimum series points and the axis. Applies only to the axes of the *\"continuous\"* and *\"logarithmic\"* type."
            },
            {
              "name": "minorGrid",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#d3d3d3'",
                  "description": "Specifies a color for the lines of the minor grid."
                },
                {
                  "name": "minorGrid",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the minor grid."
                },
                {
                  "name": "opacity",
                  "type": "Number | undefined",
                  "default": "undefined",
                  "description": "Specifies how transparent the lines of the minor grid should be."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Makes the minor grid visible."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies a width for the lines of the minor grid in pixels."
                }
              ]
            },
            {
              "name": "minorTick",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#767676'",
                  "description": "Specifies the color of minor ticks."
                },
                {
                  "name": "length",
                  "type": "Number",
                  "default": "7",
                  "description": "Specifies the length of minor ticks in pixels."
                },
                {
                  "name": "minorTick",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the appearance of minor axis ticks."
                },
                {
                  "name": "opacity",
                  "type": "Number",
                  "default": "0.3",
                  "description": "Specifies how transparent minor ticks should be."
                },
                {
                  "name": "shift",
                  "type": "Number",
                  "default": "3",
                  "description": "Shifts minor ticks from the reference position."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Makes minor ticks visible."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies the width of minor ticks in pixels."
                }
              ]
            },
            {
              "name": "opacity",
              "type": "Number",
              "default": "undefined",
              "description": "Specifies how transparent the axis line should be."
            },
            {
              "name": "placeholderSize",
              "type": "Number",
              "default": "null",
              "description": "Reserves a pixel-measured space for the axis."
            },
            {
              "name": "stripStyle",
              "subMembers": [
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "font",
                      "subMembers": [
                        {
                          "name": "color",
                          "type": null,
                          "default": "'#767676'",
                          "description": null
                        },
                        {
                          "name": "font",
                          "type": "Object",
                          "default": null,
                          "description": "Specifies font properties for strip labels."
                        }
                      ]
                    },
                    {
                      "name": "horizontalAlignment",
                      "type": "Enums.HorizontalAlignment",
                      "default": "'left'",
                      "description": "Aligns strip labels in the horizontal direction."
                    },
                    {
                      "name": "label",
                      "type": "viz/chart:CommonAxisSettingsStripStyleLabel",
                      "default": null,
                      "description": "Configures the appearance of strip labels."
                    },
                    {
                      "name": "verticalAlignment",
                      "type": "Enums.VerticalAlignment",
                      "default": "'center'",
                      "description": "Aligns strip labels in the vertical direction."
                    }
                  ]
                },
                {
                  "name": "paddingLeftRight",
                  "type": "Number",
                  "default": "10",
                  "description": "Generates a pixel-measured empty space between the left/right border of a strip and the strip label."
                },
                {
                  "name": "paddingTopBottom",
                  "type": "Number",
                  "default": "5",
                  "description": "Generates a pixel-measured empty space between the top/bottom border of a strip and the strip label."
                },
                {
                  "name": "stripStyle",
                  "type": "viz/chart:CommonAxisSettingsStripStyle",
                  "default": null,
                  "description": "Configures the appearance of strips."
                }
              ]
            },
            {
              "name": "tick",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#767676'",
                  "description": "Specifies the color of ticks."
                },
                {
                  "name": "length",
                  "type": "Number",
                  "default": "7",
                  "description": "Specifies the length of ticks in pixels."
                },
                {
                  "name": "opacity",
                  "type": "Number | undefined",
                  "default": "undefined",
                  "description": "Specifies how transparent ticks should be."
                },
                {
                  "name": "shift",
                  "type": "Number",
                  "default": "3",
                  "description": "Shifts ticks from the reference position."
                },
                {
                  "name": "tick",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the appearance of major axis ticks."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Makes ticks visible."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies the width of ticks in pixels."
                }
              ]
            },
            {
              "name": "title",
              "subMembers": [
                {
                  "name": "alignment",
                  "type": "Enums.HorizontalAlignment",
                  "default": "'center'",
                  "description": "Aligns the axis title to the left, center, or right of the axis."
                },
                {
                  "name": "font",
                  "subMembers": [
                    {
                      "name": "color",
                      "type": null,
                      "default": "'#767676'",
                      "description": null
                    },
                    {
                      "name": "font",
                      "type": "Object",
                      "default": null,
                      "description": "Specifies font properties for the axis title."
                    },
                    {
                      "name": "size",
                      "type": null,
                      "default": "16",
                      "description": null
                    }
                  ]
                },
                {
                  "name": "margin",
                  "type": "Number",
                  "default": "6",
                  "description": "Adds a pixel-measured empty space between the axis title and axis labels."
                },
                {
                  "name": "textOverflow",
                  "type": "Enums.TextOverflow",
                  "default": "'ellipsis'",
                  "description": "Specifies what to do with the axis title when it overflows the allocated space after applying [wordWrap]: hide, truncate them and display an ellipsis, or do nothing."
                },
                {
                  "name": "title",
                  "type": "viz/chart:CommonAxisSettingsTitle",
                  "default": null,
                  "description": "Configures axis titles."
                },
                {
                  "name": "wordWrap",
                  "type": "Enums.WordWrap",
                  "default": "'normal'",
                  "description": "Specifies how to wrap the axis title if it does not fit into a single line."
                }
              ]
            },
            {
              "name": "valueMarginsEnabled",
              "type": "Boolean",
              "default": "true",
              "description": "Adds an empty space between the axis and the minimum and maximum series points."
            },
            {
              "name": "visible",
              "type": "Boolean",
              "default": "true",
              "description": "Makes the axis line visible."
            },
            {
              "name": "width",
              "type": "Number",
              "default": "1",
              "description": "Specifies the width of the axis line in pixels."
            }
          ]
        },
        {
          "name": "commonPaneSettings",
          "subMembers": [
            {
              "name": "backgroundColor",
              "type": "String | ChartsColor",
              "default": "'none'",
              "description": "Specifies the color of the pane's background."
            },
            {
              "name": "border",
              "subMembers": [
                {
                  "name": "border",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the pane border."
                },
                {
                  "name": "bottom",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Shows/hides the bottom border of the pane. Applies only when the **border**.**visible** property is **true**."
                },
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#d3d3d3'",
                  "description": "Specifies the color of the pane border."
                },
                {
                  "name": "dashStyle",
                  "type": "Enums.DashStyle",
                  "default": "'solid'",
                  "description": "Specifies the dash style of the pane border."
                },
                {
                  "name": "left",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Shows/hides the left border of the pane. Applies only when the **border**.**visible** property is **true**."
                },
                {
                  "name": "opacity",
                  "type": "Number | undefined",
                  "default": "undefined",
                  "description": "Specifies how transparent the pane border should be."
                },
                {
                  "name": "right",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Shows/hides the right border of the pane. Applies only when the **border**.**visible** property is **true**."
                },
                {
                  "name": "top",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Shows/hides the top border of the pane. Applies only when the **border**.**visible** property is **true**."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Shows the pane border."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies the width of the pane border in pixels."
                }
              ]
            },
            {
              "name": "commonPaneSettings",
              "type": "viz/chart:CommonPaneSettings",
              "default": null,
              "description": "Defines common settings for all panes in a chart."
            }
          ]
        },
        {
          "name": "commonSeriesSettings",
          "subMembers": [
            {
              "name": "area",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*area* series]."
            },
            {
              "name": "bar",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*bar* series]."
            },
            {
              "name": "bubble",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*bubble* series]."
            },
            {
              "name": "candlestick",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*candlestick* series]."
            },
            {
              "name": "commonSeriesSettings",
              "type": "viz/chart:CommonSeriesSettings",
              "default": null,
              "description": "Specifies settings common for all series in the chart."
            },
            {
              "name": "fullstackedarea",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*full-stacked area* series]."
            },
            {
              "name": "fullstackedbar",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*full-stacked bar* series]."
            },
            {
              "name": "fullstackedline",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*full-stacked line* series]."
            },
            {
              "name": "fullstackedspline",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*full-stacked spline* series]."
            },
            {
              "name": "fullstackedsplinearea",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*full-stacked spline area* series]."
            },
            {
              "name": "line",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*line* series]."
            },
            {
              "name": "rangearea",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*range area* series]."
            },
            {
              "name": "rangebar",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*range bar* series]."
            },
            {
              "name": "scatter",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*scatter* series]."
            },
            {
              "name": "spline",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*spline* series]."
            },
            {
              "name": "splinearea",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*spline area* series]."
            },
            {
              "name": "stackedarea",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*stacked area* series]."
            },
            {
              "name": "stackedbar",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*stacked bar* series]."
            },
            {
              "name": "stackedline",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*stacked line* series]."
            },
            {
              "name": "stackedspline",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*stacked spline* series]."
            },
            {
              "name": "stackedsplinearea",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*stacked spline area* series]."
            },
            {
              "name": "steparea",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*step area* series]."
            },
            {
              "name": "stepline",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*step line* series]."
            },
            {
              "name": "stock",
              "type": "any",
              "default": null,
              "description": "Defines common settings for all [*stock* series]."
            },
            {
              "name": "type",
              "type": "Enums.SeriesType",
              "default": "'line'",
              "description": "Specifies the type of the series."
            },
            {
              "name": "valueField",
              "type": null,
              "default": null,
              "description": null
            }
          ]
        },
        {
          "name": "containerBackgroundColor",
          "type": "String",
          "default": "'#FFFFFF'",
          "description": "Specifies background color of the chart container."
        },
        {
          "name": "crosshair",
          "subMembers": [
            {
              "name": "color",
              "type": "String",
              "default": "'#f05b41'",
              "description": "Specifies the color of the crosshair lines."
            },
            {
              "name": "crosshair",
              "type": "Object",
              "default": null,
              "description": "Configures the crosshair feature."
            },
            {
              "name": "dashStyle",
              "type": "Enums.DashStyle",
              "default": "'solid'",
              "description": "Specifies the dash style of the crosshair lines."
            },
            {
              "name": "enabled",
              "type": "Boolean",
              "default": "false",
              "description": "Enables the crosshair."
            },
            {
              "name": "horizontalLine",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#f05b41'",
                  "description": "Specifies the color of the horizontal crosshair line."
                },
                {
                  "name": "dashStyle",
                  "type": "Enums.DashStyle",
                  "default": "'solid'",
                  "description": "Specifies the dash style of the horizontal crosshair line."
                },
                {
                  "name": "horizontalLine",
                  "type": "Object | Boolean",
                  "default": null,
                  "description": "Configures the horizontal crosshair line individually."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "backgroundColor",
                      "type": "String",
                      "default": "'#f05b41'",
                      "description": "Paints the background of the label that belongs to the horizontal crosshair line."
                    },
                    {
                      "name": "customizeText",
                      "type": "function(info)",
                      "default": null,
                      "description": "Customizes the text displayed by the label that belongs to the horizontal crosshair line."
                    },
                    {
                      "name": "font",
                      "subMembers": [
                        {
                          "name": "color",
                          "type": null,
                          "default": "'#FFFFFF'",
                          "description": null
                        },
                        {
                          "name": "font",
                          "type": "Object",
                          "default": null,
                          "description": "Specifies font properties for the label of the horizontal crosshair line."
                        }
                      ]
                    },
                    {
                      "name": "format",
                      "type": "Format | undefined",
                      "default": "undefined",
                      "description": "Formats a point value before it is displayed in the crosshair label."
                    },
                    {
                      "name": "label",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the label that belongs to the horizontal crosshair line."
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "false",
                      "description": "Makes the label of the horizontal crosshair line visible. Applies only if the crosshair feature is [enabled] and the horizontal line is [visible]."
                    }
                  ]
                },
                {
                  "name": "opacity",
                  "type": "Number | undefined",
                  "default": "undefined",
                  "description": "Specifies how transparent the horizontal crosshair line should be."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Specifies whether to show the horizontal crosshair line or not."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies the width of the horizontal crosshair line in pixels."
                }
              ]
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "backgroundColor",
                  "type": "String",
                  "default": "'#f05b41'",
                  "description": "Paints the background of the crosshair labels."
                },
                {
                  "name": "customizeText",
                  "type": "function(info)",
                  "default": null,
                  "description": "Customizes the text displayed by the crosshair labels."
                },
                {
                  "name": "font",
                  "subMembers": [
                    {
                      "name": "color",
                      "type": null,
                      "default": "'#FFFFFF'",
                      "description": null
                    },
                    {
                      "name": "font",
                      "type": "Object",
                      "default": null,
                      "description": "Specifies font properties for the crosshair labels."
                    }
                  ]
                },
                {
                  "name": "format",
                  "type": "Format | undefined",
                  "default": "undefined",
                  "description": "Formats a point value/argument before it is displayed in the crosshair label."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the crosshair labels."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Makes the crosshair labels visible. Applies only if the crosshair feature is [enabled]."
                }
              ]
            },
            {
              "name": "opacity",
              "type": "Number | undefined",
              "default": "undefined",
              "description": "Specifies how transparent the crosshair lines should be."
            },
            {
              "name": "verticalLine",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#f05b41'",
                  "description": "Specifies the color of the vertical crosshair line."
                },
                {
                  "name": "dashStyle",
                  "type": "Enums.DashStyle",
                  "default": "'solid'",
                  "description": "Specifies the dash style of the vertical crosshair line."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "backgroundColor",
                      "type": "String",
                      "default": "'#f05b41'",
                      "description": "Paints the background of the label that belongs to the vertical crosshair line."
                    },
                    {
                      "name": "customizeText",
                      "type": "function(info)",
                      "default": null,
                      "description": "Customizes the text displayed by the label that belongs to the vertical crosshair line."
                    },
                    {
                      "name": "font",
                      "subMembers": [
                        {
                          "name": "color",
                          "type": null,
                          "default": "'#FFFFFF'",
                          "description": null
                        },
                        {
                          "name": "font",
                          "type": "Object",
                          "default": null,
                          "description": "Specifies font properties for the label of the vertical crosshair line."
                        }
                      ]
                    },
                    {
                      "name": "format",
                      "type": "Format | undefined",
                      "default": "undefined",
                      "description": "Formats the point argument before it is displayed in the crosshair label."
                    },
                    {
                      "name": "label",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the label that belongs to the vertical crosshair line."
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "false",
                      "description": "Makes the label of the vertical crosshair line visible. Applies only if the crosshair feature is [enabled] and the vertical line is [visible]."
                    }
                  ]
                },
                {
                  "name": "opacity",
                  "type": "Number | undefined",
                  "default": "undefined",
                  "description": "Specifies how transparent the vertical crosshair line should be."
                },
                {
                  "name": "verticalLine",
                  "type": "Object | Boolean",
                  "default": null,
                  "description": "Configures the vertical crosshair line individually."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Specifies whether to show the vertical crosshair line or not."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies the width of the vertical crosshair line in pixels."
                }
              ]
            },
            {
              "name": "width",
              "type": "Number",
              "default": "1",
              "description": "Specifies the width of the crosshair lines."
            }
          ]
        },
        {
          "name": "customizeAnnotation",
          "type": "function(annotation) | undefined",
          "default": "undefined",
          "description": "Customizes an individual [annotation]."
        },
        {
          "name": "customizeLabel",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "dataPrepareSettings",
          "subMembers": [
            {
              "name": "checkTypeForAllData",
              "type": "Boolean",
              "default": "false",
              "description": "Validates the type of each value coming from the data source."
            },
            {
              "name": "convertToAxisDataType",
              "type": "Boolean",
              "default": "true",
              "description": "Converts data coming from a data source into a data type supported by the axis."
            },
            {
              "name": "dataPrepareSettings",
              "type": "Object",
              "default": null,
              "description": "Processes data before visualizing it."
            },
            {
              "name": "sortingMethod",
              "type": "Boolean | function(a, b)",
              "default": "true",
              "description": "Specifies the sorting order in which series points should be drawn."
            }
          ]
        },
        {
          "name": "defaultPane",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies which pane should be used by default."
        },
        {
          "name": "legend",
          "subMembers": [
            {
              "name": "customizeHint",
              "type": "function(seriesInfo)",
              "default": null,
              "description": "Specifies the text for a hint that appears when a user hovers the mouse pointer over a legend item."
            },
            {
              "name": "customizeText",
              "type": "function(seriesInfo)",
              "default": null,
              "description": "Specifies a callback function that returns the text to be displayed by a legend item."
            },
            {
              "name": "hoverMode",
              "type": "Enums.LegendHoverMode",
              "default": "'includePoints'",
              "description": "Specifies what series elements to highlight when a corresponding item in the legend is hovered over."
            },
            {
              "name": "legend",
              "type": "viz/chart:Legend",
              "default": null,
              "description": "Specifies the properties of a chart's legend."
            },
            {
              "name": "position",
              "type": "Enums.RelativePosition",
              "default": "'outside'",
              "description": "Specifies whether the legend is located outside or inside the chart's plot."
            }
          ]
        },
        {
          "name": "maxBubbleSize",
          "type": "Number",
          "default": "0.2",
          "description": "Specifies a coefficient determining the diameter of the largest bubble."
        },
        {
          "name": "minBubbleSize",
          "type": "Number",
          "default": "12",
          "description": "Specifies the diameter of the smallest bubble measured in pixels."
        },
        {
          "name": "negativesAsZeroes",
          "type": "Boolean",
          "default": "false",
          "description": "Forces the UI component to treat negative values as zeroes. Applies to stacked-like series only."
        },
        {
          "name": "panes",
          "subMembers": [
            {
              "name": "height",
              "type": "Number | String",
              "default": "undefined",
              "description": "Specifies the pane's height (or width when the chart is [rotated]) in a [multi-pane chart]."
            },
            {
              "name": "name",
              "type": "String",
              "default": "undefined",
              "description": "Specifies the name of the pane."
            },
            {
              "name": "panes",
              "type": "Array<viz/chart:Panes>",
              "default": null,
              "description": "Declares a collection of panes."
            }
          ]
        },
        {
          "name": "resizePanesOnZoom",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether panes can be resized if other chart elements require more space after [zooming or panning]."
        },
        {
          "name": "resolveLabelOverlapping",
          "type": "Enums.ChartsLabelOverlap",
          "default": "'none'",
          "description": "Specifies how the chart must behave when [series point labels] overlap."
        },
        {
          "name": "rotated",
          "type": "Boolean",
          "default": "false",
          "description": "Swaps the axes around making the value axis horizontal and the argument axis vertical."
        },
        {
          "name": "scrollBar",
          "subMembers": [
            {
              "name": "color",
              "type": "String",
              "default": "'gray'",
              "description": "Specifies the color of the scroll bar."
            },
            {
              "name": "offset",
              "type": "Number",
              "default": "5",
              "description": "Specifies the spacing between the scroll bar and the chart's plot in pixels."
            },
            {
              "name": "opacity",
              "type": "Number | undefined",
              "default": "undefined",
              "description": "Specifies the opacity of the scroll bar."
            },
            {
              "name": "position",
              "type": "Enums.Position",
              "default": "'top'",
              "description": "Specifies the position of the scroll bar in the chart."
            },
            {
              "name": "scrollBar",
              "type": "Object",
              "default": null,
              "description": "Specifies the settings of the [scroll bar]."
            },
            {
              "name": "visible",
              "type": "Boolean",
              "default": "false",
              "description": "Specifies whether the scroll bar is visible or not."
            },
            {
              "name": "width",
              "type": "Number",
              "default": "10",
              "description": "Specifies the width of the scroll bar in pixels."
            }
          ]
        },
        {
          "name": "series",
          "type": "Object | Array<ChartSeries> | undefined",
          "default": "undefined",
          "description": "Specifies properties for Chart UI component series."
        },
        {
          "name": "seriesSelectionMode",
          "type": "Enums.SingleOrMultiple",
          "default": "'single'",
          "description": "Specifies whether a single series or multiple series can be selected in the chart."
        },
        {
          "name": "seriesTemplate",
          "subMembers": [
            {
              "name": "customizeSeries",
              "type": "function(seriesName)",
              "default": null,
              "description": "Specifies a callback function that returns a [series] object with individual series settings."
            },
            {
              "name": "nameField",
              "type": "String",
              "default": "'series'",
              "description": "Specifies a data source field that represents the series name."
            },
            {
              "name": "seriesTemplate",
              "type": "Object",
              "default": "undefined",
              "description": "Defines properties for the series template."
            }
          ]
        },
        {
          "name": "size",
          "subMembers": [
            {
              "name": "height",
              "type": null,
              "default": "400",
              "description": null
            },
            {
              "name": "size",
              "type": null,
              "default": "{height: 400, width: 400}",
              "description": null
            },
            {
              "name": "width",
              "type": null,
              "default": "400",
              "description": null
            }
          ]
        },
        {
          "name": "stickyHovering",
          "type": "Boolean",
          "default": "true",
          "description": "Specifies whether a point should remain in the hover state when the mouse pointer moves away."
        },
        {
          "name": "synchronizeMultiAxes",
          "type": "Boolean",
          "default": "true",
          "description": "Indicates whether or not to synchronize value axes when they are displayed on a single pane."
        },
        {
          "name": "title",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "tooltip",
          "subMembers": [
            {
              "name": "location",
              "type": "Enums.ChartTooltipLocation",
              "default": "'center'",
              "description": "Specifies whether the tooltip must be located in the center of a series point or on its edge. Applies to bar-like and bubble series only."
            },
            {
              "name": "tooltip",
              "type": "viz/chart:Tooltip",
              "default": null,
              "description": null
            }
          ]
        },
        {
          "name": "valueAxis",
          "subMembers": [
            {
              "name": "autoBreaksEnabled",
              "type": "Boolean",
              "default": "false",
              "description": "Enables auto-calculated scale breaks. Applies only if the axis' [type] is *\"continuous\"* or *\"logarithmic\"* and [valueType] is *\"numeric\"*."
            },
            {
              "name": "axisDivisionFactor",
              "type": "Number",
              "default": "40",
              "description": "Specifies the minimum distance between two neighboring major ticks in pixels. Applies only to the axes of the *\"continuous\"* and *\"logarithmic\"* [types]."
            },
            {
              "name": "breaks",
              "type": "Array<ScaleBreak>",
              "default": "undefined",
              "description": "Declares a custom scale break collection. Applies only if the axis' [type] is *\"continuous\"* or *\"logarithmic\"*."
            },
            {
              "name": "categories",
              "type": "Array<Number, String, Date>",
              "default": null,
              "description": "Specifies the order of categories on an axis of the *\"discrete\"* [type]."
            },
            {
              "name": "constantLineStyle",
              "subMembers": [
                {
                  "name": "constantLineStyle",
                  "type": "viz/chart:ValueAxisConstantLineStyle",
                  "default": null,
                  "description": "Specifies the appearance of those constant lines that belong to the value axis."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "horizontalAlignment",
                      "type": "Enums.HorizontalAlignment",
                      "default": "'left'",
                      "description": "Aligns constant line labels in the horizontal direction."
                    },
                    {
                      "name": "label",
                      "type": "viz/chart:ValueAxisConstantLineStyleLabel",
                      "default": null,
                      "description": "Specifies the appearance of the labels of those constant lines that belong to the value axis."
                    },
                    {
                      "name": "verticalAlignment",
                      "type": "Enums.VerticalAlignment",
                      "default": "'top'",
                      "description": "Aligns constant line labels in the vertical direction."
                    }
                  ]
                }
              ]
            },
            {
              "name": "constantLines",
              "subMembers": [
                {
                  "name": "constantLines",
                  "type": "Array<viz/chart:ValueAxisConstantLines>",
                  "default": null,
                  "description": "Declares a collection of constant lines belonging to the value axis."
                },
                {
                  "name": "displayBehindSeries",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Specifies whether to display the constant line behind or in front of the series."
                },
                {
                  "name": "extendAxis",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Specifies whether to extend the axis's default [visual range] to display the constant line."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "horizontalAlignment",
                      "type": "Enums.HorizontalAlignment",
                      "default": "'left'",
                      "description": "Aligns constant line labels in the horizontal direction."
                    },
                    {
                      "name": "label",
                      "type": "viz/chart:ValueAxisConstantLinesLabel",
                      "default": null,
                      "description": "Configures the constant line label."
                    },
                    {
                      "name": "text",
                      "type": "String",
                      "default": "undefined",
                      "description": "Specifies the text of a constant line label. By default, equals to the value of the constant line."
                    },
                    {
                      "name": "verticalAlignment",
                      "type": "Enums.VerticalAlignment",
                      "default": "'top'",
                      "description": "Aligns constant line labels in the vertical direction."
                    }
                  ]
                },
                {
                  "name": "value",
                  "type": "Number | Date | String",
                  "default": "undefined",
                  "description": "Specifies the value indicated by a constant line. Setting this property is necessary."
                }
              ]
            },
            {
              "name": "customPosition",
              "type": "Number | Date | String",
              "default": "undefined",
              "description": "Specifies the position of the value axis on the argument axis."
            },
            {
              "name": "endOnTick",
              "type": "Boolean",
              "default": "undefined",
              "description": null
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeHint",
                  "type": "function(axisValue)",
                  "default": null,
                  "description": "Specifies the hint that appears when a user points to an axis label."
                },
                {
                  "name": "customizeText",
                  "type": "function(axisValue)",
                  "default": null,
                  "description": "Customizes the text displayed by axis labels."
                },
                {
                  "name": "format",
                  "type": "Format",
                  "default": "undefined",
                  "description": "Formats a value before it is displayed in an axis label."
                },
                {
                  "name": "label",
                  "type": "viz/chart:ValueAxisLabel",
                  "default": null,
                  "description": "Configures the labels of the value axis."
                }
              ]
            },
            {
              "name": "linearThreshold",
              "type": "Number",
              "default": "undefined",
              "description": "Specifies a value used to calculate the range on a [logarithmic axis] within which the axis should be linear. Applies only if the data source contains negative values or zeroes."
            },
            {
              "name": "logarithmBase",
              "type": "Number",
              "default": "10",
              "description": "Specifies the value to be raised to a power when generating ticks for an axis of the  *\"logarithmic\"* [type]."
            },
            {
              "name": "maxAutoBreakCount",
              "type": "Number",
              "default": "4",
              "description": "Sets a limit on [auto-calculated scale breaks]. [Custom scale breaks] are not counted."
            },
            {
              "name": "minVisualRangeLength",
              "type": "Number | Object | Enums.TimeInterval",
              "default": "undefined",
              "description": "Specifies the minimum length of the [visual range]."
            },
            {
              "name": "minorTickCount",
              "type": "Number",
              "default": "undefined",
              "description": "Specifies how many [minor ticks] to place between two neighboring major ticks."
            },
            {
              "name": "minorTickInterval",
              "type": "Number | Object | Enums.TimeInterval",
              "default": null,
              "description": "Specifies the interval between [minor ticks]. Applies only to [continuous axes]."
            },
            {
              "name": "multipleAxesSpacing",
              "type": "Number",
              "default": "5",
              "description": "Adds a pixel-measured empty space between two side-by-side value axes. Applies if several value axes are [located on one side] of the chart."
            },
            {
              "name": "name",
              "type": "String",
              "default": "undefined",
              "description": "Specifies the name of the value axis."
            },
            {
              "name": "offset",
              "type": "Number",
              "default": "undefined",
              "description": "Specifies the shift in pixels of the value axis."
            },
            {
              "name": "pane",
              "type": "String",
              "default": "undefined",
              "description": "Binds the value axis to a [pane]."
            },
            {
              "name": "position",
              "type": "Enums.Position",
              "default": "'left'",
              "description": "Relocates the value axis."
            },
            {
              "name": "showZero",
              "type": "Boolean",
              "default": "undefined",
              "description": "Specifies whether or not to show zero on the value axis."
            },
            {
              "name": "strips",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "undefined",
                  "description": "Specifies the color of the strip."
                },
                {
                  "name": "endValue",
                  "type": "Number | Date | String",
                  "default": "undefined",
                  "description": "Along with the **startValue** property, limits the strip."
                },
                {
                  "name": "label",
                  "subMembers": [
                    {
                      "name": "label",
                      "type": "viz/chart:ValueAxisStripsLabel",
                      "default": null,
                      "description": "Configures the strip label."
                    },
                    {
                      "name": "text",
                      "type": "String",
                      "default": "undefined",
                      "description": "Specifies the text of the strip label."
                    }
                  ]
                },
                {
                  "name": "startValue",
                  "type": "Number | Date | String",
                  "default": "undefined",
                  "description": "Along with the **endValue** property, limits the strip."
                },
                {
                  "name": "strips",
                  "type": "Array<viz/chart:ValueAxisStrips>",
                  "default": null,
                  "description": "Declares a collection of strips belonging to the value axis."
                }
              ]
            },
            {
              "name": "synchronizedValue",
              "type": "Number",
              "default": "undefined",
              "description": "Synchronizes two or more value axes with each other at a specific value."
            },
            {
              "name": "tickInterval",
              "type": "Number | Object | Enums.TimeInterval",
              "default": null,
              "description": "Specifies the interval between [major ticks]. Does not apply to [discrete axes]."
            },
            {
              "name": "title",
              "subMembers": [
                {
                  "name": "text",
                  "type": "String",
                  "default": "undefined",
                  "description": "Specifies the text of the axis title."
                },
                {
                  "name": "title",
                  "type": "viz/chart:ValueAxisTitle",
                  "default": null,
                  "description": "Configures the axis title."
                }
              ]
            },
            {
              "name": "type",
              "type": "Enums.AxisScaleType",
              "default": "undefined",
              "description": "Specifies the type of the value axis."
            },
            {
              "name": "valueAxis",
              "type": "Array<viz/chart:ValueAxis>",
              "default": null,
              "description": "Configures the value axis."
            },
            {
              "name": "valueMarginsEnabled",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "valueType",
              "type": "Enums.ChartsDataType",
              "default": "undefined",
              "description": "Casts values to a specified data type."
            },
            {
              "name": "visualRange",
              "type": "Object | Array<Number, String, Date>",
              "default": null,
              "description": "Defines the axis' displayed range. Cannot be wider than the [wholeRange]."
            },
            {
              "name": "visualRangeUpdateMode",
              "type": "Enums.VisualRangeUpdateMode",
              "default": "'auto'",
              "description": "Specifies how the component changes **valueAxis**.[visualRange] when chart data is updated."
            },
            {
              "name": "wholeRange",
              "type": "Object | Array<Number, String, Date>",
              "default": "undefined",
              "description": "Defines the range where the axis can be [zoomed and panned]. To limit the visual range, specify the [visualRange] property."
            }
          ]
        },
        {
          "name": "zoomAndPan",
          "subMembers": [
            {
              "name": "allowMouseWheel",
              "type": "Boolean",
              "default": "true",
              "description": "Specifies whether users can use the mouse wheel to zoom the chart. Applies only if zoom is allowed for the [argument] or [value axis]."
            },
            {
              "name": "allowTouchGestures",
              "type": "Boolean",
              "default": "true",
              "description": "Specifies whether users can use touch gestures to zoom or pan the chart. Applies only if zoom and pan are allowed for the [argument] or [value axis]."
            },
            {
              "name": "argumentAxis",
              "type": "Enums.ChartZoomAndPanMode",
              "default": "'none'",
              "description": "Specifies whether users are allowed to zoom and/or pan the argument axis."
            },
            {
              "name": "dragBoxStyle",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String | undefined",
                  "default": "undefined",
                  "description": "Specifies the drag box's color."
                },
                {
                  "name": "dragBoxStyle",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the box that appears when users zoom the chart by selecting an area with the drag gesture. Applies only if [dragToZoom] is **true**."
                },
                {
                  "name": "opacity",
                  "type": "Number | undefined",
                  "default": "undefined",
                  "description": "Specifies the drag box's transparency."
                }
              ]
            },
            {
              "name": "dragToZoom",
              "type": "Boolean",
              "default": "false",
              "description": "Enables users to zoom the chart by selecting an area with the drag gesture. Applies only on devices that use a mouse."
            },
            {
              "name": "panKey",
              "type": "Enums.EventKeyModifier",
              "default": "'shift'",
              "description": "Specifies the key that enables panning when [dragToZoom] is **true**. Applies only on devices that use a mouse."
            },
            {
              "name": "valueAxis",
              "type": "Enums.ChartZoomAndPanMode",
              "default": "'none'",
              "description": "Specifies whether users are allowed to zoom and/or pan the value axis."
            },
            {
              "name": "zoomAndPan",
              "type": "Object",
              "default": null,
              "description": "Configures zooming and panning."
            }
          ]
        }
      ]
    },
    {
      "name": "Series Types",
      "subMembers": [
        {
          "name": "AreaSeries",
          "subMembers": [
            {
              "name": "AreaSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *area* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "BarSeries",
          "subMembers": [
            {
              "name": "BarSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *bar* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'sum'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user selects a bar."
            }
          ]
        },
        {
          "name": "BubbleSeries",
          "subMembers": [
            {
              "name": "BubbleSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *bubble* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartBubbleSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "argumentField",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user selects a bubble."
            }
          ]
        },
        {
          "name": "CandleStickSeries",
          "subMembers": [
            {
              "name": "CandleStickSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *candlestick* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartFinancialSeriesAggregationMethod",
                  "default": "'ohlc'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "argumentField",
              "type": "String",
              "default": "'date'",
              "description": "Specifies which data source field provides arguments for series points."
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user pauses on a series."
            },
            {
              "name": "hoverStyle",
              "subMembers": [
                {
                  "name": "hatching",
                  "subMembers": [
                    {
                      "name": "direction",
                      "type": "Enums.HatchDirection",
                      "default": "'none'",
                      "description": null
                    },
                    {
                      "name": "hatching",
                      "type": "Object",
                      "default": null,
                      "description": null
                    }
                  ]
                },
                {
                  "name": "hoverStyle",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user selects a point."
            },
            {
              "name": "selectionStyle",
              "subMembers": [
                {
                  "name": "hatching",
                  "subMembers": [
                    {
                      "name": "direction",
                      "type": "Enums.HatchDirection",
                      "default": "'none'",
                      "description": null
                    },
                    {
                      "name": "hatching",
                      "type": "Object",
                      "default": null,
                      "description": null
                    }
                  ]
                },
                {
                  "name": "selectionStyle",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            }
          ]
        },
        {
          "name": "ChartSeries",
          "subMembers": [
            {
              "name": "ChartSeries",
              "type": "Object",
              "default": null,
              "description": "Specifies properties for Chart UI component series."
            },
            {
              "name": "name",
              "type": "String | undefined",
              "default": "undefined",
              "description": "Specifies the name that identifies the series."
            },
            {
              "name": "tag",
              "type": "any | undefined",
              "default": "undefined",
              "description": "Specifies data about a series."
            },
            {
              "name": "type",
              "type": "Enums.SeriesType",
              "default": "'line'",
              "description": "Sets the series type."
            }
          ]
        },
        {
          "name": "CommonSeries",
          "subMembers": [
            {
              "name": "CommonSeries",
              "type": "Object",
              "default": null,
              "description": "An object that defines configuration properties for chart series."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": "Configures data aggregation for the series."
                },
                {
                  "name": "calculate",
                  "type": "function(aggregationInfo, series) | undefined",
                  "default": "undefined",
                  "description": "Specifies a custom aggregate function. Applies only if the [aggregation method] is *\"custom\"*."
                },
                {
                  "name": "enabled",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Enables data aggregation for the series."
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSeriesAggregationMethod",
                  "default": null,
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "argumentField",
              "type": "String",
              "default": "'arg'",
              "description": "Specifies which data source field provides arguments for series points."
            },
            {
              "name": "axis",
              "type": "String | undefined",
              "default": "undefined",
              "description": "Binds the series to a value axis."
            },
            {
              "name": "barOverlapGroup",
              "type": "String | undefined",
              "default": "undefined",
              "description": "Allows you to group bar series so that bars with the same argument overlap."
            },
            {
              "name": "barPadding",
              "type": "Number | undefined",
              "default": "undefined",
              "description": "Controls the padding and consequently the width of all bars in a series using relative units. Ignored if the [barWidth] property is set."
            },
            {
              "name": "barWidth",
              "type": "Number | undefined",
              "default": "undefined",
              "description": "Specifies a fixed width for all bars in a series, measured in pixels. Takes precedence over the [barPadding] property."
            },
            {
              "name": "border",
              "subMembers": [
                {
                  "name": "border",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the series border (in area-like series) or the series point border (in bar-like and bubble series)."
                },
                {
                  "name": "color",
                  "type": "String | undefined",
                  "default": "undefined",
                  "description": "Colors the series border (in area-like series) or the series point border (in bar-like and bubble series)."
                },
                {
                  "name": "dashStyle",
                  "type": "Enums.DashStyle | undefined",
                  "default": "undefined",
                  "description": "Sets a dash style for the series border (in area-like series) or for the series point border (in bar-like and bubble series)."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Shows the series border (in area-like series) or the series point border (in bar-like and bubble series)."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "2",
                  "description": "Sets a pixel-measured width for the series border (in area-like series) or for the series point border (in bar-like and bubble series)."
                }
              ]
            },
            {
              "name": "closeValueField",
              "type": "String",
              "default": "'close'",
              "description": "Specifies which data source field provides close values for points of a financial series."
            },
            {
              "name": "color",
              "type": "String | ChartsColor | undefined",
              "default": "undefined",
              "description": "Specifies the color of the series."
            },
            {
              "name": "cornerRadius",
              "type": "Number",
              "default": "0",
              "description": "Makes bars look rounded. Applies only to bar-like series."
            },
            {
              "name": "dashStyle",
              "type": "Enums.DashStyle",
              "default": "'solid'",
              "description": "Specifies the dash style of the series line. Applies only to line-like series."
            },
            {
              "name": "highValueField",
              "type": "String",
              "default": "'high'",
              "description": "Specifies which data source field provides high values for points of a financial series."
            },
            {
              "name": "hoverMode",
              "type": "Enums.SeriesHoverMode",
              "default": null,
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "hoverStyle",
              "subMembers": [
                {
                  "name": "border",
                  "subMembers": [
                    {
                      "name": "border",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the appearance adopted by the series border (in area-like series) or the series point border (in bar-like and bubble series) when a user points to the series."
                    },
                    {
                      "name": "color",
                      "type": "String | undefined",
                      "default": "undefined",
                      "description": "Colors the series border (in area-like series) or the series point border (in bar-like and bubble series) when a user points to the series."
                    },
                    {
                      "name": "dashStyle",
                      "type": "Enums.DashStyle | undefined",
                      "default": "'solid'",
                      "description": "Sets a dash style for the series border (in area-like series) or for the series point border (in bar-like and bubble series) when a user points to the series."
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "false",
                      "description": "Shows the series border (in area-like series) or the series point border (in bar-like and bubble series) when a user points to the series."
                    },
                    {
                      "name": "width",
                      "type": "Number",
                      "default": "3",
                      "description": "Sets a pixel-measured width for the series border (in area-like series) or for the series point border (in bar-like and bubble series) when a user points to the series."
                    }
                  ]
                },
                {
                  "name": "color",
                  "type": "String | ChartsColor | undefined",
                  "default": "undefined",
                  "description": "Specifies the color of the series in the hovered state."
                },
                {
                  "name": "dashStyle",
                  "type": "Enums.DashStyle",
                  "default": "'solid'",
                  "description": "Specifies the dash style of the series line when the series is in the hovered state. Applies only to line-like series."
                },
                {
                  "name": "hatching",
                  "subMembers": [
                    {
                      "name": "direction",
                      "type": "Enums.HatchDirection",
                      "default": "'right'",
                      "description": "Specifies the direction of hatching lines."
                    },
                    {
                      "name": "hatching",
                      "type": "Object",
                      "default": null,
                      "description": "Configures hatching that applies when a user points to the series."
                    },
                    {
                      "name": "opacity",
                      "type": "Number",
                      "default": "0.75",
                      "description": "Specifies how transparent hatching lines should be."
                    },
                    {
                      "name": "step",
                      "type": "Number",
                      "default": "6",
                      "description": "Specifies the distance between two side-by-side hatching lines in pixels."
                    },
                    {
                      "name": "width",
                      "type": "Number",
                      "default": "2",
                      "description": "Specifies the width of hatching lines in pixels."
                    }
                  ]
                },
                {
                  "name": "highlight",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Specifies whether to lighten the series when a user hovers the mouse pointer over it."
                },
                {
                  "name": "hoverStyle",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the appearance adopted by the series when a user points to it."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "3",
                  "description": "Specifies the pixel-measured width of the series line when the series is in the hovered state."
                }
              ]
            },
            {
              "name": "ignoreEmptyPoints",
              "type": "Boolean",
              "default": "false",
              "description": "Specifies whether the series should ignore null data points."
            },
            {
              "name": "innerColor",
              "type": "String",
              "default": "'#ffffff'",
              "description": "Specifies a filling color for the body of a series point that visualizes a [non-reduced] value. Applies only to [*candlestick* series]."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "alignment",
                  "type": "Enums.HorizontalAlignment",
                  "default": "'center'",
                  "description": "Aligns point labels in relation to their points."
                },
                {
                  "name": "argumentFormat",
                  "type": "Format | undefined",
                  "default": "undefined",
                  "description": "Formats the point argument before it is displayed in the point label. To format the point value, use the [format] property."
                },
                {
                  "name": "backgroundColor",
                  "type": "String | undefined",
                  "default": "undefined",
                  "description": "Colors the point labels' background. The default color is inherited from the points."
                },
                {
                  "name": "border",
                  "subMembers": [
                    {
                      "name": "border",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the borders of point labels."
                    },
                    {
                      "name": "color",
                      "type": "String | undefined",
                      "default": "'#d3d3d3'",
                      "description": "Colors the border."
                    },
                    {
                      "name": "dashStyle",
                      "type": "Enums.DashStyle | undefined",
                      "default": "'solid'",
                      "description": "Specifies the dash style of the border."
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "false",
                      "description": "Makes the border visible."
                    },
                    {
                      "name": "width",
                      "type": "Number",
                      "default": "1",
                      "description": "Specifies the width of the border in pixels."
                    }
                  ]
                },
                {
                  "name": "connector",
                  "subMembers": [
                    {
                      "name": "color",
                      "type": "String | undefined",
                      "default": "undefined",
                      "description": "Colors the connectors."
                    },
                    {
                      "name": "connector",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the label connectors."
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "false",
                      "description": "Makes the connectors visible. Applies only if **label**.**visible** is set to **true**."
                    },
                    {
                      "name": "width",
                      "type": "Number",
                      "default": "1",
                      "description": "Specifies the width of the connectors in pixels."
                    }
                  ]
                },
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes text displayed by point labels."
                },
                {
                  "name": "displayFormat",
                  "type": "String | undefined",
                  "default": "undefined",
                  "description": "Specifies the label's text."
                },
                {
                  "name": "font",
                  "subMembers": [
                    {
                      "name": "color",
                      "type": null,
                      "default": "'#FFFFFF'",
                      "description": null
                    },
                    {
                      "name": "font",
                      "type": "Object",
                      "default": null,
                      "description": "Specifies font properties for point labels."
                    },
                    {
                      "name": "size",
                      "type": null,
                      "default": "14",
                      "description": null
                    }
                  ]
                },
                {
                  "name": "format",
                  "type": "Format | undefined",
                  "default": "undefined",
                  "description": "Formats the point value before it is displayed in the point label."
                },
                {
                  "name": "horizontalOffset",
                  "type": "Number",
                  "default": "0",
                  "description": "Along with **verticalOffset**, shifts point labels from their initial positions."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": "Configures point labels."
                },
                {
                  "name": "position",
                  "type": "Enums.RelativePosition",
                  "default": "'outside'",
                  "description": "Specifies whether to display point labels inside or outside of series points. Applies only to bubble, range-like and bar-like series."
                },
                {
                  "name": "rotationAngle",
                  "type": "Number",
                  "default": "0",
                  "description": "Rotates point labels."
                },
                {
                  "name": "showForZeroValues",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Specifies whether or not to show labels for points with zero value. Applies only to bar-like series."
                },
                {
                  "name": "verticalOffset",
                  "type": "Number",
                  "default": "0",
                  "description": "Along with **horizontalOffset**, shifts point labels from their initial positions."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": "Makes the point labels visible."
                }
              ]
            },
            {
              "name": "lowValueField",
              "type": "String",
              "default": "'low'",
              "description": "Specifies which data source field provides low values for points of a financial series."
            },
            {
              "name": "maxLabelCount",
              "type": "Number | undefined",
              "default": "undefined",
              "description": "Specifies a limit for the number of point labels."
            },
            {
              "name": "minBarSize",
              "type": "Number | undefined",
              "default": "undefined",
              "description": "Specifies the minimal possible height (or length if the chart is [rotated]) of a bar in pixels. Applies only to bar-like series."
            },
            {
              "name": "opacity",
              "type": "Number",
              "default": "0.5",
              "description": "Specifies how transparent the series should be."
            },
            {
              "name": "openValueField",
              "type": "String",
              "default": "'open'",
              "description": "Specifies which data source field provides open values for points of a financial series."
            },
            {
              "name": "pane",
              "type": "String",
              "default": "'default'",
              "description": "Specifies which [pane] the series should belong to. Accepts the [name] of the pane."
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "border",
                  "subMembers": [
                    {
                      "name": "border",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the appearance of the series point border in scatter, line- and area-like series."
                    },
                    {
                      "name": "color",
                      "type": "String | undefined",
                      "default": "undefined",
                      "description": "Colors the border."
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "false",
                      "description": "Makes the border visible."
                    },
                    {
                      "name": "width",
                      "type": "Number",
                      "default": "1",
                      "description": "Sets the width of the border in pixels."
                    }
                  ]
                },
                {
                  "name": "color",
                  "type": "String | ChartsColor | undefined",
                  "default": "undefined",
                  "description": "Colors the series points."
                },
                {
                  "name": "hoverMode",
                  "type": "Enums.PointInteractionMode",
                  "default": "'onlyPoint'",
                  "description": "Specifies series elements to be highlighted when a user pauses on a series point."
                },
                {
                  "name": "hoverStyle",
                  "subMembers": [
                    {
                      "name": "border",
                      "subMembers": [
                        {
                          "name": "border",
                          "type": "Object",
                          "default": null,
                          "description": "Configures the appearance of the point border when a user pauses on the point."
                        },
                        {
                          "name": "color",
                          "type": "String | undefined",
                          "default": "undefined",
                          "description": "Specifies the color of the point border when the point is in the hovered state."
                        },
                        {
                          "name": "visible",
                          "type": "Boolean",
                          "default": "true",
                          "description": "Makes the border visible when a user pauses on the series point."
                        },
                        {
                          "name": "width",
                          "type": "Number",
                          "default": "4",
                          "description": "Specifies the width of the point border when the point is in the hovered state."
                        }
                      ]
                    },
                    {
                      "name": "color",
                      "type": "String | ChartsColor | undefined",
                      "default": "undefined",
                      "description": "Specifies the color of series points in the hovered state."
                    },
                    {
                      "name": "hoverStyle",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the appearance adopted by a series point when a user pauses on it."
                    },
                    {
                      "name": "size",
                      "type": "Number | undefined",
                      "default": "undefined",
                      "description": "Specfies the diameter of series points in the hovered state."
                    }
                  ]
                },
                {
                  "name": "image",
                  "subMembers": [
                    {
                      "name": "height",
                      "subMembers": [
                        {
                          "name": "height",
                          "type": "Number | Object",
                          "default": "30",
                          "description": "Specifies the height of the image used instead of a point marker."
                        },
                        {
                          "name": "rangeMaxPoint",
                          "type": "Number | undefined",
                          "default": "undefined",
                          "description": "Specifies the height of the image that represents the maximum point in a *range area* series."
                        },
                        {
                          "name": "rangeMinPoint",
                          "type": "Number | undefined",
                          "default": "undefined",
                          "description": "Specifies the height of the image that represents the minimum point in a *range area* series."
                        }
                      ]
                    },
                    {
                      "name": "image",
                      "type": "String | undefined | Object",
                      "default": "undefined",
                      "description": "Substitutes the [standard point symbols] with an image."
                    },
                    {
                      "name": "url",
                      "subMembers": [
                        {
                          "name": "rangeMaxPoint",
                          "type": "String | undefined",
                          "default": "undefined",
                          "description": "Specifies the URL of the image to be used as a maximum point marker."
                        },
                        {
                          "name": "rangeMinPoint",
                          "type": "String | undefined",
                          "default": "undefined",
                          "description": "Specifies the URL of the image to be used as a maximum point marker."
                        },
                        {
                          "name": "url",
                          "type": "String | undefined | Object",
                          "default": "undefined",
                          "description": "Specifies the URL of the image to be used as a point marker."
                        }
                      ]
                    },
                    {
                      "name": "width",
                      "subMembers": [
                        {
                          "name": "rangeMaxPoint",
                          "type": "Number | undefined",
                          "default": "undefined",
                          "description": "Specifies the width of the image that represents the maximum point in a *range area* series."
                        },
                        {
                          "name": "rangeMinPoint",
                          "type": "Number | undefined",
                          "default": "undefined",
                          "description": "Specifies the width of the image that represents the minimum point in a *range area* series."
                        },
                        {
                          "name": "width",
                          "type": "Number | Object",
                          "default": "30",
                          "description": "Specifies the width of an image that is used as a point marker."
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": "Configures series points in scatter, line- and area-like series."
                },
                {
                  "name": "selectionMode",
                  "type": "Enums.PointInteractionMode",
                  "default": "'onlyPoint'",
                  "description": "Specifies series elements to be highlighted when a user selects a series point."
                },
                {
                  "name": "selectionStyle",
                  "subMembers": [
                    {
                      "name": "border",
                      "subMembers": [
                        {
                          "name": "border",
                          "type": "Object",
                          "default": null,
                          "description": "Configures the border of a selected point."
                        },
                        {
                          "name": "color",
                          "type": "String | undefined",
                          "default": "undefined",
                          "description": "Specifies the color of the point border when the point is selected."
                        },
                        {
                          "name": "visible",
                          "type": "Boolean",
                          "default": "true",
                          "description": "Makes the border of a selected point visible."
                        },
                        {
                          "name": "width",
                          "type": "Number",
                          "default": "4",
                          "description": "Specifies the width of the point border when the point is selected."
                        }
                      ]
                    },
                    {
                      "name": "color",
                      "type": "String | ChartsColor | undefined",
                      "default": "undefined",
                      "description": "Specifies the color of series points in the selected state."
                    },
                    {
                      "name": "selectionStyle",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the appearance of a selected series point."
                    },
                    {
                      "name": "size",
                      "type": "Number | undefined",
                      "default": "undefined",
                      "description": "Specfies the diameter of series points in the selected state."
                    }
                  ]
                },
                {
                  "name": "size",
                  "type": "Number",
                  "default": "12",
                  "description": "Specifies the diameter of series points in pixels."
                },
                {
                  "name": "symbol",
                  "type": "Enums.PointSymbol",
                  "default": "'circle'",
                  "description": "Specifies which symbol should represent series points in scatter, line- and area-like series."
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Makes the series points visible."
                }
              ]
            },
            {
              "name": "rangeValue1Field",
              "type": "String",
              "default": "'val1'",
              "description": "Coupled with the **rangeValue2Field** property, specifies which data source field provides values for a range-like series."
            },
            {
              "name": "rangeValue2Field",
              "type": "String",
              "default": "'val2'",
              "description": "Coupled with the **rangeValue1Field** property, specifies which data source field provides values for a range-like series."
            },
            {
              "name": "reduction",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'#ff0000'",
                  "description": "Specifies a color for the points whose price has decreased in comparison to the price of the previous point."
                },
                {
                  "name": "level",
                  "type": "Enums.FinancialChartReductionLevel",
                  "default": "'close'",
                  "description": "Specifies whether high, low, open or close prices of points should be compared."
                },
                {
                  "name": "reduction",
                  "type": "Object",
                  "default": null,
                  "description": "Specifies reduction properties for financial series."
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "Enums.SeriesSelectionMode",
              "default": null,
              "description": "Specifies series elements to be highlighted when a user selects a series."
            },
            {
              "name": "selectionStyle",
              "subMembers": [
                {
                  "name": "border",
                  "subMembers": [
                    {
                      "name": "border",
                      "type": "Object",
                      "default": null,
                      "description": "Configures the appearance adopted by the series border (in area-like series) or the series point border (in bar-like and bubble series) when a user selects the series."
                    },
                    {
                      "name": "color",
                      "type": "String | undefined",
                      "default": "undefined",
                      "description": "Colors the series border (in area-like series) or the series point border (in bar-like and bubble series) when a user selects the series."
                    },
                    {
                      "name": "dashStyle",
                      "type": "Enums.DashStyle | undefined",
                      "default": "'solid'",
                      "description": "Sets a dash style for the series border (in area-like series) or for the series point border (in bar-like and bubble series) when a user selects the series."
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "false",
                      "description": "Shows the series border (in area-like series) or the series point border (in bar-like and bubble series) when a user selects the series."
                    },
                    {
                      "name": "width",
                      "type": "Number",
                      "default": "3",
                      "description": "Sets a pixel-measured width for the series border (in area-like series) or for the series point border (in bar-like and bubble series) when a user selects the series."
                    }
                  ]
                },
                {
                  "name": "color",
                  "type": "String | ChartsColor | undefined",
                  "default": "undefined",
                  "description": "Specifies the color of the series in the selected state."
                },
                {
                  "name": "dashStyle",
                  "type": "Enums.DashStyle",
                  "default": "'solid'",
                  "description": "Specifies the dash style of the series line when the series is in the selected state. Applies only to line-like series."
                },
                {
                  "name": "hatching",
                  "subMembers": [
                    {
                      "name": "direction",
                      "type": "Enums.HatchDirection",
                      "default": "'right'",
                      "description": "Specifies the direction of hatching lines."
                    },
                    {
                      "name": "hatching",
                      "type": "Object",
                      "default": null,
                      "description": "Configures hatching that applies when a user selects the series."
                    },
                    {
                      "name": "opacity",
                      "type": "Number",
                      "default": "0.5",
                      "description": "Specifies how transparent hatching lines should be."
                    },
                    {
                      "name": "step",
                      "type": "Number",
                      "default": "6",
                      "description": "Specifies the distance between two side-by-side hatching lines in pixels."
                    },
                    {
                      "name": "width",
                      "type": "Number",
                      "default": "2",
                      "description": "Specifies the width of hatching lines in pixels."
                    }
                  ]
                },
                {
                  "name": "highlight",
                  "type": "Boolean",
                  "default": "true",
                  "description": "Specifies whether to lighten the series when a user selects it."
                },
                {
                  "name": "selectionStyle",
                  "type": "Object",
                  "default": null,
                  "description": "Configures the appearance adopted by the series when a user selects it."
                },
                {
                  "name": "width",
                  "type": "Number",
                  "default": "3",
                  "description": "Specifies the pixel-measured width of the series line when the series is in the selected state."
                }
              ]
            },
            {
              "name": "showInLegend",
              "type": "Boolean",
              "default": "true",
              "description": "Specifies whether to show the series in the [legend] or not."
            },
            {
              "name": "sizeField",
              "type": "String",
              "default": "'size'",
              "description": "Specifies which data source field provides size values for bubbles. Required by and applies only to *bubble* series."
            },
            {
              "name": "stack",
              "type": "String",
              "default": "'default'",
              "description": "Specifies which stack the series should belongs to. Applies only to *stacked bar* and *full-stacked bar* series."
            },
            {
              "name": "tagField",
              "type": "String",
              "default": "'tag'",
              "description": "Specifies which data source field provides auxiliary data for series points."
            },
            {
              "name": "valueErrorBar",
              "subMembers": [
                {
                  "name": "color",
                  "type": "String",
                  "default": "'black'",
                  "description": "Specifies the color of error bars."
                },
                {
                  "name": "displayMode",
                  "type": "Enums.ValueErrorBarDisplayMode",
                  "default": "'auto'",
                  "description": "Specifies whether error bars must be displayed in full or partially."
                },
                {
                  "name": "edgeLength",
                  "type": "Number",
                  "default": "8",
                  "description": "Specifies the length of the lines that indicate error bar edges."
                },
                {
                  "name": "highValueField",
                  "type": "String | undefined",
                  "default": "undefined",
                  "description": "Specifies which data field provides high error values."
                },
                {
                  "name": "lineWidth",
                  "type": "Number",
                  "default": "2",
                  "description": "Specifies the width of the error bar line."
                },
                {
                  "name": "lowValueField",
                  "type": "String | undefined",
                  "default": "undefined",
                  "description": "Specifies which data field provides low error values."
                },
                {
                  "name": "opacity",
                  "type": "Number | undefined",
                  "default": "undefined",
                  "description": "Specifies how trasparent error bars should be."
                },
                {
                  "name": "type",
                  "type": "Enums.ValueErrorBarType | undefined",
                  "default": "undefined",
                  "description": "Specifies how error bar values must be calculated."
                },
                {
                  "name": "value",
                  "type": "Number",
                  "default": "1",
                  "description": "Specifies the value to be used for generating error bars."
                },
                {
                  "name": "valueErrorBar",
                  "type": "Object",
                  "default": null,
                  "description": "Configures error bars."
                }
              ]
            },
            {
              "name": "valueField",
              "type": "String",
              "default": "'val'",
              "description": "Specifies which data source field provides values for series points."
            },
            {
              "name": "visible",
              "type": "Boolean",
              "default": "true",
              "description": "Specifies whether the series is visible or not."
            },
            {
              "name": "width",
              "type": "Number",
              "default": "2",
              "description": "Specifies the width of the series line in pixels. Applies only to line-like series."
            }
          ]
        },
        {
          "name": "FullStackedAreaSeries",
          "subMembers": [
            {
              "name": "FullStackedAreaSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *full-stacked area* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": "An object defining the label configuration properties."
                }
              ]
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "FullStackedBarSeries",
          "subMembers": [
            {
              "name": "FullStackedBarSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *full-stacked bar* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'sum'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "position",
                  "type": "Enums.RelativePosition",
                  "default": "'inside'",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user selects a bar."
            }
          ]
        },
        {
          "name": "FullStackedLineSeries",
          "subMembers": [
            {
              "name": "FullStackedLineSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *full-stacked line* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "FullStackedSplineAreaSeries",
          "subMembers": [
            {
              "name": "FullStackedSplineAreaSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *full-stacked spline area* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "FullStackedSplineSeries",
          "subMembers": [
            {
              "name": "FullStackedSplineSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *full-stacked spline area* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "LineSeries",
          "subMembers": [
            {
              "name": "LineSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *line* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "RangeAreaSeries",
          "subMembers": [
            {
              "name": "RangeAreaSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *range area* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartRangeSeriesAggregationMethod",
                  "default": "'range'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "argumentField",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "RangeBarSeries",
          "subMembers": [
            {
              "name": "RangeBarSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *range bar* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartRangeSeriesAggregationMethod",
                  "default": "'range'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "argumentField",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user selects a range bar."
            }
          ]
        },
        {
          "name": "ScatterSeries",
          "subMembers": [
            {
              "name": "ScatterSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *scatter* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "hoverMode",
              "type": "string",
              "default": null,
              "description": "This member is supposed to be hidden, because scatter series doesn't have a hover mode."
            },
            {
              "name": "hoverStyle",
              "type": "object",
              "default": null,
              "description": "This member is supposed to be hidden, because scatter series doesn't have a hover mode and thus a hover style."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "string",
              "default": null,
              "description": "This member is supposed to be hidden, because scatter series doesn't have a selection mode."
            },
            {
              "name": "selectionStyle",
              "type": "object",
              "default": null,
              "description": "This member is supposed to be hidden, because scatter series doesn't have a selection mode and thus a selection style."
            }
          ]
        },
        {
          "name": "Series Types",
          "type": "Object",
          "default": null,
          "description": "This section lists objects that define properties used to configure series of specific types."
        },
        {
          "name": "SplineAreaSeries",
          "subMembers": [
            {
              "name": "SplineAreaSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *spline area* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "SplineSeries",
          "subMembers": [
            {
              "name": "SplineSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *spline* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "StackedAreaSeries",
          "subMembers": [
            {
              "name": "StackedAreaSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *stacked area* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "StackedBarSeries",
          "subMembers": [
            {
              "name": "StackedBarSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *stacked bar* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'sum'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "position",
                  "type": "Enums.RelativePosition",
                  "default": "'inside'",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user selects a bar."
            }
          ]
        },
        {
          "name": "StackedLineSeries",
          "subMembers": [
            {
              "name": "StackedLineSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *stacked line* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "StackedSplineAreaSeries",
          "subMembers": [
            {
              "name": "StackedSplineAreaSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *stacked spline area* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "StackedSplineSeries",
          "subMembers": [
            {
              "name": "StackedSplineSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *stacked spline* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "StepAreaSeries",
          "subMembers": [
            {
              "name": "StepAreaSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *step rea* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "border",
              "subMembers": [
                {
                  "name": "border",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "true",
                  "description": null
                }
              ]
            },
            {
              "name": "color",
              "type": null,
              "default": null,
              "description": null
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "hoverstyle",
              "subMembers": [
                {
                  "name": "border",
                  "subMembers": [
                    {
                      "name": "border",
                      "type": "Object",
                      "default": null,
                      "description": null
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "true",
                      "description": null
                    }
                  ]
                },
                {
                  "name": "hoverStyle",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "point",
              "subMembers": [
                {
                  "name": "point",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "visible",
                  "type": "Boolean",
                  "default": "false",
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            },
            {
              "name": "selectionstyle",
              "subMembers": [
                {
                  "name": "border",
                  "subMembers": [
                    {
                      "name": "border",
                      "type": "Object",
                      "default": null,
                      "description": null
                    },
                    {
                      "name": "visible",
                      "type": "Boolean",
                      "default": "false",
                      "description": null
                    }
                  ]
                },
                {
                  "name": "selectionStyle",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            }
          ]
        },
        {
          "name": "StepLineSeries",
          "subMembers": [
            {
              "name": "StepLineSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *step line* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartSingleValueSeriesAggregationMethod",
                  "default": "'avg'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'nearestPoint'",
              "description": "Specifies series elements to be highlighted when a user points to a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'includePoints'",
              "description": "Specifies series elements to be highlighted when a user selects a series."
            }
          ]
        },
        {
          "name": "StockSeries",
          "subMembers": [
            {
              "name": "StockSeries",
              "type": "Object",
              "default": null,
              "description": "Describes settings supported by a series of the *stock* type."
            },
            {
              "name": "aggregation",
              "subMembers": [
                {
                  "name": "aggregation",
                  "type": "Object",
                  "default": null,
                  "description": null
                },
                {
                  "name": "method",
                  "type": "Enums.ChartFinancialSeriesAggregationMethod",
                  "default": "'ohlc'",
                  "description": "Specifies how to aggregate series points."
                }
              ]
            },
            {
              "name": "argumentField",
              "type": "String",
              "default": "'date'",
              "description": "Specifies which data source field provides arguments for series points."
            },
            {
              "name": "hoverMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user pauses on a series."
            },
            {
              "name": "label",
              "subMembers": [
                {
                  "name": "customizeText",
                  "type": "function(pointInfo)",
                  "default": null,
                  "description": "Customizes the text displayed by point labels."
                },
                {
                  "name": "label",
                  "type": "Object",
                  "default": null,
                  "description": null
                }
              ]
            },
            {
              "name": "selectionMode",
              "type": "String",
              "default": "'onlyPoint'",
              "description": "Specifies series elements to be highlighted when a user selects a point."
            }
          ]
        }
      ]
    },
    {
      "name": "Chart Elements",
      "subMembers": [
        {
          "name": "Axis",
          "type": "Object",
          "default": null,
          "description": "This section describes the **Axis** object. This object represents a [chart axis]."
        },
        {
          "name": "Point",
          "subMembers": [
            {
              "name": "Fields",
              "subMembers": [
                {
                  "name": "Fields",
                  "type": null,
                  "default": null,
                  "description": "Fields that provide information on the series point."
                },
                {
                  "name": "aggregationInfo",
                  "subMembers": [
                    {
                      "name": "aggregationInfo",
                      "type": "chartPointAggregationInfoObject",
                      "default": null,
                      "description": "Provides information about the aggregation interval and the data objects that fall within it."
                    },
                    {
                      "name": "aggregationInterval",
                      "type": "any",
                      "default": null,
                      "description": "Contains the length of the aggregation interval in axis units (numbers or dates). If the interval is set in pixels (using the [aggregationGroupWidth] property), it will be converted to axis units."
                    },
                    {
                      "name": "data",
                      "type": "Array<any>",
                      "default": null,
                      "description": "Contains data objects that were aggregated into this point."
                    },
                    {
                      "name": "intervalEnd",
                      "type": "any",
                      "default": null,
                      "description": "Contains the end value of the interval to which the point belongs."
                    },
                    {
                      "name": "intervalStart",
                      "type": "any",
                      "default": null,
                      "description": "Contains the start value of the interval to which the point belongs."
                    }
                  ]
                },
                {
                  "name": "originalCloseValue",
                  "type": "Number | String",
                  "default": null,
                  "description": "Contains the close value of the point. This field is useful for points belonging to a series of the [candle stick] or [stock] type only."
                },
                {
                  "name": "originalHighValue",
                  "type": "Number | String",
                  "default": null,
                  "description": "Contains the high value of the point. This field is useful for points belonging to a series of the [candle stick] or [stock] type only."
                },
                {
                  "name": "originalLowValue",
                  "type": "Number | String",
                  "default": null,
                  "description": "Contains the low value of the point. This field is useful for points belonging to a series of the [candle stick] or [stock] type only."
                },
                {
                  "name": "originalMinValue",
                  "type": "String | Number | Date",
                  "default": null,
                  "description": "Contains the first value of the point. This field is useful for points belonging to a series of the [range area] or [range bar] type only."
                },
                {
                  "name": "originalOpenValue",
                  "type": "Number | String",
                  "default": null,
                  "description": "Contains the open value of the point. This field is useful for points belonging to a series of the [candle stick] or [stock] type only."
                },
                {
                  "name": "originalValue",
                  "type": null,
                  "default": null,
                  "description": null
                },
                {
                  "name": "size",
                  "type": "Number | String",
                  "default": null,
                  "description": "Contains the size of the bubble as it was set in the data source. This field is useful for points belonging to a series of the [bubble] type only."
                }
              ]
            },
            {
              "name": "Point",
              "type": "Object",
              "default": null,
              "description": "This section describes the **Point** object, which represents a series point."
            }
          ]
        },
        {
          "name": "Series",
          "subMembers": [
            {
              "name": "Fields",
              "subMembers": [
                {
                  "name": "Fields",
                  "type": null,
                  "default": null,
                  "description": "Fields that provide information on the series."
                },
                {
                  "name": "axis",
                  "type": "String",
                  "default": null,
                  "description": "Returns the name of the value [axis] of the series."
                },
                {
                  "name": "barOverlapGroup",
                  "type": "String",
                  "default": null,
                  "description": "The name of the series' [barOverlapGroup]."
                },
                {
                  "name": "pane",
                  "type": "String",
                  "default": null,
                  "description": "Returns the name of the series [pane]."
                },
                {
                  "name": "stack",
                  "type": "String",
                  "default": null,
                  "description": "The name of the series' [stack]."
                }
              ]
            },
            {
              "name": "Series",
              "type": "Object",
              "default": null,
              "description": "This section describes the **Series** object, which represents a series."
            }
          ]
        }
      ]
    },
    {
      "name": "dxChart",
      "type": "\"line\"",
      "default": null,
      "description": "The Chart is a UI component that visualizes data from a local or remote storage using a great variety of [series types] along with different interactive elements, such as [tooltips], [crosshair pointer], [legend], etc."
    }
  ],
  "Methods": [
    {
      "name": "getArgumentAxis()",
      "type": null,
      "default": null,
      "description": "Gets the argument axis."
    },
    {
      "name": "getValueAxis()",
      "type": null,
      "default": null,
      "description": "Gets a value axis."
    },
    {
      "name": "getValueAxis(name)",
      "type": null,
      "default": null,
      "description": "Gets a value axis with the specified [name]."
    },
    {
      "name": "resetVisualRange()",
      "type": null,
      "default": null,
      "description": "Resets the visual ranges of both axes to the data range or the whole range if it is within the data range."
    },
    {
      "name": "zoomArgument(startValue_endValue)",
      "type": null,
      "default": null,
      "description": "Sets the argument axis' start and end values."
    }
  ],
  "Events": [
    {
      "name": "onArgumentAxisClick",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed when a [label] on the [argument axis] is clicked or tapped."
    },
    {
      "name": "onDisposing",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed before the UI component is [disposed of].md '{basewidgetpath}/Methods/#dispose')."
    },
    {
      "name": "onDone",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when all series are ready."
    },
    {
      "name": "onDrawn",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when the UI component's rendering has finished."
    },
    {
      "name": "onExported",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after the UI component is exported."
    },
    {
      "name": "onExporting",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed before the UI component is exported."
    },
    {
      "name": "onFileSaving",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed before a file with exported UI component is saved to the user's local storage."
    },
    {
      "name": "onIncidentOccurred",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when an error or warning occurs."
    },
    {
      "name": "onInitialized",
      "type": "function(e)",
      "default": null,
      "description": "A function used in JavaScript frameworks to save the UI component instance."
    },
    {
      "name": "onLegendClick",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed when a [legend item] is clicked or tapped."
    },
    {
      "name": "onOptionChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after a UI component property is changed."
    },
    {
      "name": "onPointClick",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a series point is clicked or tapped."
    },
    {
      "name": "onPointHoverChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed after the pointer enters or leaves a series point."
    },
    {
      "name": "onPointSelectionChanged",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a series point is selected or selection is canceled."
    },
    {
      "name": "onSeriesClick",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed when a [series] is clicked or tapped."
    },
    {
      "name": "onSeriesHoverChanged",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed after the pointer enters or leaves a series."
    },
    {
      "name": "onSeriesSelectionChanged",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed when a series is selected or selection is canceled."
    },
    {
      "name": "onTooltipHidden",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a tooltip becomes hidden."
    },
    {
      "name": "onTooltipShown",
      "type": "function(e)",
      "default": null,
      "description": "A function that is executed when a tooltip appears."
    },
    {
      "name": "onZoomEnd",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed when zooming or panning ends."
    },
    {
      "name": "onZoomStart",
      "type": "function(e)",
      "default": "null",
      "description": "A function that is executed when zooming or panning begins."
    },
    {
      "name": "argumentAxisClick",
      "type": "eventType",
      "default": null,
      "description": "Raised when a [label] on the [argument axis] is clicked or tapped."
    },
    {
      "name": "legendClick",
      "type": "eventType",
      "default": null,
      "description": "Raised when a [legend item] is clicked or tapped."
    },
    {
      "name": "seriesClick",
      "type": "eventType",
      "default": null,
      "description": "Raised when a [series] is clicked or tapped."
    },
    {
      "name": "seriesHoverChanged",
      "type": "eventType",
      "default": null,
      "description": "Raised after the pointer enters or leaves a series."
    },
    {
      "name": "seriesSelectionChanged",
      "type": "eventType",
      "default": null,
      "description": "Raised when a series is selected or selection is canceled."
    },
    {
      "name": "zoomEnd",
      "type": "eventType",
      "default": null,
      "description": "Raised when zooming or panning ends."
    },
    {
      "name": "zoomStart",
      "type": "eventType",
      "default": null,
      "description": "Raised when zooming or panning begins."
    }
  ],
  "Types": [
    {
      "name": "AggregatedPointsPosition",
      "type": "Union",
      "default": null,
      "description": "Specifies the start position of the aggregated series points in the aggregation interval."
    },
    {
      "name": "ArgumentAxis",
      "subMembers": [
        {
          "name": "ArgumentAxis",
          "type": "uid: viz/chart:ArgumentAxis",
          "default": null,
          "description": "Configures the argument axis."
        },
        {
          "name": "aggregationGroupWidth",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies the length of aggregation intervals in pixels. Applies only to axes of continuous and logarithmic [types]. May be ignored in favor of the [aggregationInterval] property."
        },
        {
          "name": "aggregationInterval",
          "type": "Number | Object | Enums.TimeInterval",
          "default": null,
          "description": "Specifies the length of aggregation intervals in axis units. Applies only to axes of continuous and logarithmic [types]."
        },
        {
          "name": "argumentType",
          "type": "Enums.ChartsDataType | undefined",
          "default": "undefined",
          "description": "Casts arguments to a specified data type."
        },
        {
          "name": "axisDivisionFactor",
          "type": "Number",
          "default": "70",
          "description": "Specifies the minimum distance between two neighboring major ticks in pixels. Applies only to the axes of the *\"continuous\"* and *\"logarithmic\"* [types]."
        },
        {
          "name": "breaks",
          "type": "Array<ScaleBreak>",
          "default": "undefined",
          "description": "Declares a scale break collection. Applies only if the axis' [type] is *\"continuous\"* or *\"logarithmic\"*."
        },
        {
          "name": "categories",
          "type": "Array<Number, String, Date>",
          "default": null,
          "description": "Specifies the order of categories on an axis of the *\"discrete\"* [type]."
        },
        {
          "name": "constantLineStyle",
          "type": "Object",
          "default": null,
          "description": "Specifies the appearance of those constant lines that belong to the argument axis."
        },
        {
          "name": "constantLines",
          "type": "Array<Object>",
          "default": null,
          "description": "Declares a collection of constant lines belonging to the argument axis."
        },
        {
          "name": "customPosition",
          "type": "Number | Date | String | undefined",
          "default": "undefined",
          "description": "Specifies the position of the argument axis on the value axis."
        },
        {
          "name": "customPositionAxis",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the [name] of a value axis on which the argument axis should be positioned. Applies only to [multi-axis charts]."
        },
        {
          "name": "endOnTick",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether to force the axis to start and end on ticks."
        },
        {
          "name": "holidays",
          "type": "Array<Date, String> | Array<Number>",
          "default": "undefined",
          "description": "Dates to be excluded from the axis when [workdaysOnly] is **true**."
        },
        {
          "name": "hoverMode",
          "type": "Enums.ArgumentAxisHoverMode",
          "default": "'none'",
          "description": "Specifies chart elements to be highlighted when a user points to an axis label."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures the labels of the argument axis."
        },
        {
          "name": "linearThreshold",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies a value used to calculate the range on a [logarithmic axis] within which the axis should be linear. Applies only if the data source contains negative values or zeroes."
        },
        {
          "name": "logarithmBase",
          "type": "Number",
          "default": "10",
          "description": "Specifies the value to be raised to a power when generating ticks for an axis of the *\"logarithmic\"* [type]."
        },
        {
          "name": "minVisualRangeLength",
          "type": "Number | Object | Enums.TimeInterval | undefined",
          "default": "undefined",
          "description": "Specifies the minimum length of the [visual range]."
        },
        {
          "name": "minorTickCount",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies how many [minor ticks] to place between two neighboring major ticks."
        },
        {
          "name": "minorTickInterval",
          "type": "Number | Object | Enums.TimeInterval",
          "default": null,
          "description": "Specifies the interval between [minor ticks]. Applies only to the axes of the *\"continuous\"* [type]."
        },
        {
          "name": "offset",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies the shift in pixels of the argument axis."
        },
        {
          "name": "position",
          "type": "Enums.Position",
          "default": "'bottom'",
          "description": "Relocates the argument axis."
        },
        {
          "name": "singleWorkdays",
          "type": "Array<Date, String> | Array<Number>",
          "default": "undefined",
          "description": "Dates to be included on the axis when [workdaysOnly] is **true**."
        },
        {
          "name": "strips",
          "type": "Array<Object>",
          "default": null,
          "description": "Declares a collection of strips belonging to the argument axis."
        },
        {
          "name": "tickInterval",
          "type": "Number | Object | Enums.TimeInterval",
          "default": null,
          "description": "Specifies the interval between [major ticks]."
        },
        {
          "name": "title",
          "type": "String | Object",
          "default": null,
          "description": "Configures the axis title."
        },
        {
          "name": "type",
          "type": "Enums.AxisScaleType | undefined",
          "default": "undefined",
          "description": "Specifies the type of the argument axis."
        },
        {
          "name": "visualRange",
          "type": "Object | Array<Number, String, Date>",
          "default": null,
          "description": "Defines the axis' displayed range. Cannot be wider than the [wholeRange]."
        },
        {
          "name": "visualRangeUpdateMode",
          "type": "Enums.VisualRangeUpdateMode",
          "default": "'auto'",
          "description": "Specifies how the axis's [visual range] should behave when chart data is updated."
        },
        {
          "name": "wholeRange",
          "type": "Object | Array<Number, String, Date> | undefined",
          "default": "undefined",
          "description": "Defines the range where the axis can be [zoomed and panned]."
        },
        {
          "name": "workWeek",
          "type": "Array<Number>",
          "default": "[1, 2, 3, 4, 5]",
          "description": "Specifies which days are workdays. The array can contain values from 0 (Sunday) to 6 (Saturday). Applies only if [workdaysOnly] is **true**."
        },
        {
          "name": "workdaysOnly",
          "type": "Boolean",
          "default": "false",
          "description": "Leaves only workdays on the axis: the [work week] days plus [single workdays] minus [holidays]. Applies only if the axis' [argumentType] is *\"datetime\"*."
        }
      ]
    },
    {
      "name": "ArgumentAxisClickEvent",
      "subMembers": [
        {
          "name": "ArgumentAxisClickEvent",
          "type": "Object",
          "default": null,
          "description": "The type of the [argumentAxisClick] event handler's argument."
        },
        {
          "name": "argument",
          "type": "Date | Number | String",
          "default": null,
          "description": null
        }
      ]
    },
    {
      "name": "ArgumentAxisConstantLineStyle",
      "subMembers": [
        {
          "name": "ArgumentAxisConstantLineStyle",
          "type": "module: viz/chart",
          "default": null,
          "description": "Specifies the appearance of those constant lines that belong to the argument axis."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Specifies the appearance of the labels of those constant lines that belong to the argument axis."
        }
      ]
    },
    {
      "name": "ArgumentAxisConstantLineStyleLabel",
      "subMembers": [
        {
          "name": "ArgumentAxisConstantLineStyleLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Specifies the appearance of the labels of those constant lines that belong to the argument axis."
        },
        {
          "name": "horizontalAlignment",
          "type": "Enums.HorizontalAlignment",
          "default": "'right'",
          "description": "Aligns constant line labels in the horizontal direction."
        },
        {
          "name": "verticalAlignment",
          "type": "Enums.VerticalAlignment",
          "default": "'top'",
          "description": "Aligns constant line labels in the vertical direction."
        }
      ]
    },
    {
      "name": "ArgumentAxisConstantLines",
      "subMembers": [
        {
          "name": "ArgumentAxisConstantLines",
          "type": "uid: viz/chart:ArgumentAxisConstantLines",
          "default": null,
          "description": "Declares a collection of constant lines belonging to the argument axis."
        },
        {
          "name": "displayBehindSeries",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether to display the constant line behind or in front of the series."
        },
        {
          "name": "extendAxis",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether to extend the axis's default [visual range] to display the constant line."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures the constant line label."
        },
        {
          "name": "value",
          "type": "Number | Date | String | undefined",
          "default": "undefined",
          "description": "Specifies the value indicated by a constant line. Setting this property is necessary."
        }
      ]
    },
    {
      "name": "ArgumentAxisConstantLinesLabel",
      "subMembers": [
        {
          "name": "ArgumentAxisConstantLinesLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the constant line label."
        },
        {
          "name": "horizontalAlignment",
          "type": "Enums.HorizontalAlignment",
          "default": "'right'",
          "description": "Aligns constant line labels in the horizontal direction."
        },
        {
          "name": "text",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the text of a constant line label. By default, equals to the value of the constant line."
        },
        {
          "name": "verticalAlignment",
          "type": "Enums.VerticalAlignment",
          "default": "'top'",
          "description": "Aligns constant line labels in the vertical direction."
        }
      ]
    },
    {
      "name": "ArgumentAxisLabel",
      "subMembers": [
        {
          "name": "ArgumentAxisLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the labels of the argument axis."
        },
        {
          "name": "customizeHint",
          "type": "function(argument)",
          "default": null,
          "description": "Specifies the hint that appears when a user points to an axis label."
        },
        {
          "name": "customizeText",
          "type": "function(argument)",
          "default": null,
          "description": "Customizes the text displayed by axis labels."
        },
        {
          "name": "format",
          "type": "Format | undefined",
          "default": "undefined",
          "description": "Formats a value before it is displayed in an axis label."
        }
      ]
    },
    {
      "name": "ArgumentAxisStrips",
      "subMembers": [
        {
          "name": "ArgumentAxisStrips",
          "type": "uid: viz/chart:ArgumentAxisStrips",
          "default": null,
          "description": "Declares a collection of strips belonging to the argument axis."
        },
        {
          "name": "color",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the color of the strip."
        },
        {
          "name": "endValue",
          "type": "Number | Date | String | undefined",
          "default": "undefined",
          "description": "Along with the **startValue** property, limits the strip."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures the strip label."
        },
        {
          "name": "startValue",
          "type": "Number | Date | String | undefined",
          "default": "undefined",
          "description": "Along with the **endValue** property, limits the strip."
        }
      ]
    },
    {
      "name": "ArgumentAxisStripsLabel",
      "subMembers": [
        {
          "name": "ArgumentAxisStripsLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the strip label."
        },
        {
          "name": "text",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the text of the strip label."
        }
      ]
    },
    {
      "name": "ArgumentAxisTitle",
      "subMembers": [
        {
          "name": "ArgumentAxisTitle",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the axis title."
        },
        {
          "name": "text",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the text of the axis title."
        }
      ]
    },
    {
      "name": "ChartBubbleSeriesAggregationMethod",
      "type": "Union",
      "default": null,
      "description": "Specifies how to aggregate series points."
    },
    {
      "name": "ChartFinancialSeriesAggregationMethod",
      "type": "Union",
      "default": null,
      "description": "Specifies how to aggregate series points."
    },
    {
      "name": "ChartLabelDisplayMode",
      "type": "Union",
      "default": null,
      "description": "Specifies how to rotate or stagger horizontal axis labels."
    },
    {
      "name": "ChartRangeSeriesAggregationMethod",
      "type": "Union",
      "default": null,
      "description": "Specifies how to aggregate series points."
    },
    {
      "name": "ChartSeriesAggregationMethod",
      "type": "Union",
      "default": null,
      "description": "Specifies how to aggregate series points."
    },
    {
      "name": "ChartSingleValueSeriesAggregationMethod",
      "type": "Union",
      "default": null,
      "description": "Specifies how to aggregate series points."
    },
    {
      "name": "ChartTooltipLocation",
      "type": "Union",
      "default": null,
      "description": "Specifies whether the tooltip must be located in the center of a series point or on its edge."
    },
    {
      "name": "ChartZoomAndPanMode",
      "type": "Union",
      "default": null,
      "description": "Specifies whether users are allowed to zoom and/or pan the argument and value axis."
    },
    {
      "name": "CommonAxisSettings",
      "subMembers": [
        {
          "name": "CommonAxisSettings",
          "type": "module: viz/chart",
          "default": null,
          "description": "Defines common settings for both the argument and value axis in a chart."
        },
        {
          "name": "aggregatedPointsPosition",
          "type": "Enums.AggregatedPointsPosition",
          "default": "'betweenTicks'",
          "description": "Specifies the start position of the aggregated series points in the aggregation interval."
        },
        {
          "name": "allowDecimals",
          "type": "Boolean | undefined",
          "default": "undefined",
          "description": "Specifies whether to allow decimal values on the axis. When **false**, the axis contains integer values only."
        },
        {
          "name": "color",
          "type": "String",
          "default": "'#767676'",
          "description": "Specifies the color of the axis line."
        },
        {
          "name": "constantLineStyle",
          "type": "Object",
          "default": null,
          "description": "Configures the appearance of all constant lines in the UI component."
        },
        {
          "name": "discreteAxisDivisionMode",
          "type": "Enums.DiscreteAxisDivisionMode",
          "default": "'betweenLabels'",
          "description": "Specifies whether ticks and grid lines should cross axis labels or lie between them. Applies only to the axes of the *\"discrete\"* type."
        },
        {
          "name": "endOnTick",
          "type": "Boolean | undefined",
          "default": "undefined",
          "description": "Specifies whether to force the axis to start and end on ticks."
        },
        {
          "name": "inverted",
          "type": "Boolean",
          "default": "false",
          "description": "Inverts the axis."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures axis labels."
        },
        {
          "name": "maxValueMargin",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Controls the empty space between the maximum series points and the axis. Applies only to the axes of the *\"continuous\"* and *\"logarithmic\"* type."
        },
        {
          "name": "minValueMargin",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Controls the empty space between the minimum series points and the axis. Applies only to the axes of the *\"continuous\"* and *\"logarithmic\"* type."
        },
        {
          "name": "opacity",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies how transparent the axis line should be."
        },
        {
          "name": "placeholderSize",
          "type": "Number",
          "default": "null",
          "description": "Reserves a pixel-measured space for the axis."
        },
        {
          "name": "stripStyle",
          "type": "Object",
          "default": null,
          "description": "Configures the appearance of strips."
        },
        {
          "name": "title",
          "type": "Object",
          "default": null,
          "description": "Configures axis titles."
        },
        {
          "name": "valueMarginsEnabled",
          "type": "Boolean",
          "default": "true",
          "description": "Adds an empty space between the axis and the minimum and maximum series points."
        },
        {
          "name": "visible",
          "type": "Boolean",
          "default": "true",
          "description": "Makes the axis line visible."
        },
        {
          "name": "width",
          "type": "Number",
          "default": "1",
          "description": "Specifies the width of the axis line in pixels."
        }
      ]
    },
    {
      "name": "CommonAxisSettingsConstantLineStyle",
      "subMembers": [
        {
          "name": "CommonAxisSettingsConstantLineStyle",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the appearance of all constant lines in the UI component."
        },
        {
          "name": "color",
          "type": "String",
          "default": "'#000000'",
          "description": "Specifies the color of constant lines."
        },
        {
          "name": "dashStyle",
          "type": "Enums.DashStyle",
          "default": "'solid'",
          "description": "Specifies the dash style of constant lines."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures constant line labels."
        },
        {
          "name": "paddingLeftRight",
          "type": "Number",
          "default": "10",
          "description": "Generates a pixel-measured empty space between the left/right side of a constant line and the constant line label."
        },
        {
          "name": "paddingTopBottom",
          "type": "Number",
          "default": "10",
          "description": "Generates a pixel-measured empty space between the top/bottom side of a constant line and the constant line label."
        },
        {
          "name": "width",
          "type": "Number",
          "default": "1",
          "description": "Specifies the width of constant lines in pixels."
        }
      ]
    },
    {
      "name": "CommonAxisSettingsConstantLineStyleLabel",
      "subMembers": [
        {
          "name": "CommonAxisSettingsConstantLineStyleLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures constant line labels."
        },
        {
          "name": "position",
          "type": "Enums.RelativePosition",
          "default": "'inside'",
          "description": "Specifies the position of constant line labels on the chart plot."
        },
        {
          "name": "visible",
          "type": "Boolean",
          "default": "true",
          "description": "Makes constant line labels visible."
        }
      ]
    },
    {
      "name": "CommonAxisSettingsLabel",
      "subMembers": [
        {
          "name": "CommonAxisSettingsLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures axis labels."
        },
        {
          "name": "alignment",
          "type": "Enums.HorizontalAlignment | undefined",
          "default": "undefined",
          "description": "Aligns axis labels in relation to ticks."
        },
        {
          "name": "displayMode",
          "type": "Enums.ChartLabelDisplayMode",
          "default": "'standard'",
          "description": "Allows you to rotate or stagger axis labels. Applies to the horizontal axis only."
        },
        {
          "name": "indentFromAxis",
          "type": "Number",
          "default": "10",
          "description": "Adds a pixel-measured empty space between an axis and its labels."
        },
        {
          "name": "overlappingBehavior",
          "type": "Enums.ChartsAxisLabelOverlap",
          "default": "'hide'",
          "description": "Decides how to arrange axis labels when there is not enough space to display all of them."
        },
        {
          "name": "position",
          "type": "Enums.RelativePosition | Enums.Position",
          "default": "'outside'",
          "description": "Specifies the position of labels relative to the chart or its axis."
        },
        {
          "name": "rotationAngle",
          "type": "Number",
          "default": "90",
          "description": "Specifies the rotation angle of axis labels. Applies only if **displayMode** or **overlappingBehavior** is *\"rotate\"*."
        },
        {
          "name": "staggeringSpacing",
          "type": "Number",
          "default": "5",
          "description": "Adds a pixel-measured empty space between two staggered rows of axis labels. Applies only if **displayMode** or **overlappingBehavior** is *\"stagger\"*."
        },
        {
          "name": "template",
          "type": "template | undefined",
          "default": "undefined",
          "description": "Specifies a custom template for axis labels."
        },
        {
          "name": "textOverflow",
          "type": "Enums.TextOverflow",
          "default": "'none'",
          "description": "Specifies what to do with axis labels that overflow the allocated space after applying [wordWrap]: hide, truncate them and display an ellipsis, or do nothing."
        },
        {
          "name": "visible",
          "type": "Boolean",
          "default": "true",
          "description": "Shows/hides axis labels."
        },
        {
          "name": "wordWrap",
          "type": "Enums.WordWrap",
          "default": "'normal'",
          "description": "Specifies how to wrap texts that do not fit into a single line."
        }
      ]
    },
    {
      "name": "CommonAxisSettingsStripStyle",
      "subMembers": [
        {
          "name": "CommonAxisSettingsStripStyle",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the appearance of strips."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures the appearance of strip labels."
        },
        {
          "name": "paddingLeftRight",
          "type": "Number",
          "default": "10",
          "description": "Generates a pixel-measured empty space between the left/right border of a strip and the strip label."
        },
        {
          "name": "paddingTopBottom",
          "type": "Number",
          "default": "5",
          "description": "Generates a pixel-measured empty space between the top/bottom border of a strip and the strip label."
        }
      ]
    },
    {
      "name": "CommonAxisSettingsStripStyleLabel",
      "subMembers": [
        {
          "name": "CommonAxisSettingsStripStyleLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the appearance of strip labels."
        },
        {
          "name": "horizontalAlignment",
          "type": "Enums.HorizontalAlignment",
          "default": "'left'",
          "description": "Aligns strip labels in the horizontal direction."
        },
        {
          "name": "verticalAlignment",
          "type": "Enums.VerticalAlignment",
          "default": "'center'",
          "description": "Aligns strip labels in the vertical direction."
        }
      ]
    },
    {
      "name": "CommonAxisSettingsTitle",
      "subMembers": [
        {
          "name": "CommonAxisSettingsTitle",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures axis titles."
        },
        {
          "name": "alignment",
          "type": "Enums.HorizontalAlignment",
          "default": "'center'",
          "description": "Aligns the axis title to the left, center, or right of the axis."
        },
        {
          "name": "margin",
          "type": "Number",
          "default": "6",
          "description": "Adds a pixel-measured empty space between the axis title and axis labels."
        },
        {
          "name": "textOverflow",
          "type": "Enums.TextOverflow",
          "default": "'ellipsis'",
          "description": "Specifies what to do with the axis title when it overflows the allocated space after applying [wordWrap]: hide, truncate them and display an ellipsis, or do nothing."
        },
        {
          "name": "wordWrap",
          "type": "Enums.WordWrap",
          "default": "'normal'",
          "description": "Specifies how to wrap the axis title if it does not fit into a single line."
        }
      ]
    },
    {
      "name": "CommonPaneSettings",
      "subMembers": [
        {
          "name": "CommonPaneSettings",
          "type": "module: viz/chart",
          "default": null,
          "description": "Defines common settings for all panes in a chart."
        },
        {
          "name": "backgroundColor",
          "type": "String | ChartsColor",
          "default": "'none'",
          "description": "Specifies the color of the pane's background."
        }
      ]
    },
    {
      "name": "CommonSeriesSettings",
      "subMembers": [
        {
          "name": "CommonSeriesSettings",
          "type": "uid: viz/chart:CommonSeriesSettings",
          "default": null,
          "description": "Specifies settings common for all series in the chart."
        },
        {
          "name": "area",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*area* series]."
        },
        {
          "name": "bar",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*bar* series]."
        },
        {
          "name": "bubble",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*bubble* series]."
        },
        {
          "name": "candlestick",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*candlestick* series]."
        },
        {
          "name": "fullstackedarea",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*full-stacked area* series]."
        },
        {
          "name": "fullstackedbar",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*full-stacked bar* series]."
        },
        {
          "name": "fullstackedline",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*full-stacked line* series]."
        },
        {
          "name": "fullstackedspline",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*full-stacked spline* series]."
        },
        {
          "name": "fullstackedsplinearea",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*full-stacked spline area* series]."
        },
        {
          "name": "line",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*line* series]."
        },
        {
          "name": "rangearea",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*range area* series]."
        },
        {
          "name": "rangebar",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*range bar* series]."
        },
        {
          "name": "scatter",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*scatter* series]."
        },
        {
          "name": "spline",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*spline* series]."
        },
        {
          "name": "splinearea",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*spline area* series]."
        },
        {
          "name": "stackedarea",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*stacked area* series]."
        },
        {
          "name": "stackedbar",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*stacked bar* series]."
        },
        {
          "name": "stackedline",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*stacked line* series]."
        },
        {
          "name": "stackedspline",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*stacked spline* series]."
        },
        {
          "name": "stackedsplinearea",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*stacked spline area* series]."
        },
        {
          "name": "steparea",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*step area* series]."
        },
        {
          "name": "stepline",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*step line* series]."
        },
        {
          "name": "stock",
          "type": "any",
          "default": null,
          "description": "Defines common settings for all [*stock* series]."
        },
        {
          "name": "type",
          "type": "Enums.SeriesType",
          "default": "'line'",
          "description": "Specifies the type of the series."
        }
      ]
    },
    {
      "name": "DisposingEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [disposing] event handler's argument."
    },
    {
      "name": "DoneEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [done] event handler's argument."
    },
    {
      "name": "DrawnEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [drawn] event handler's argument."
    },
    {
      "name": "EventKeyModifier",
      "type": "Union",
      "default": null,
      "description": "Specifies the key that enables panning when [dragToZoom] is **true**."
    },
    {
      "name": "ExportedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [exported] event handler's argument."
    },
    {
      "name": "ExportingEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [exporting] event handler's argument."
    },
    {
      "name": "FileSavingEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [fileSaving] event handler's argument."
    },
    {
      "name": "FinancialChartReductionLevel",
      "type": "Union",
      "default": null,
      "description": "Specifies whether high, low, open or close prices of points should be compared."
    },
    {
      "name": "IncidentOccurredEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [incidentOccurred] event handler's argument."
    },
    {
      "name": "InitializedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [initialized] event handler's argument."
    },
    {
      "name": "Legend",
      "subMembers": [
        {
          "name": "Legend",
          "type": "BaseChartLegend | Object",
          "default": null,
          "description": "Specifies the properties of a chart's legend."
        },
        {
          "name": "customizeHint",
          "type": "function(seriesInfo)",
          "default": null,
          "description": "Specifies the text for a hint that appears when a user hovers the mouse pointer over a legend item."
        },
        {
          "name": "customizeText",
          "type": "function(seriesInfo)",
          "default": null,
          "description": "Specifies a callback function that returns the text to be displayed by a legend item."
        },
        {
          "name": "hoverMode",
          "type": "Enums.LegendHoverMode",
          "default": "'includePoints'",
          "description": "Specifies what series elements to highlight when a corresponding item in the legend is hovered over."
        },
        {
          "name": "position",
          "type": "Enums.RelativePosition",
          "default": "'outside'",
          "description": "Specifies whether the legend is located outside or inside the chart's plot."
        }
      ]
    },
    {
      "name": "LegendClickEvent",
      "subMembers": [
        {
          "name": "LegendClickEvent",
          "type": "Object",
          "default": null,
          "description": "The type of the [legendClick] event handler's argument."
        },
        {
          "name": "target",
          "type": "chartSeriesObject",
          "default": null,
          "description": null
        }
      ]
    },
    {
      "name": "OptionChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [optionChanged] event handler's argument."
    },
    {
      "name": "Panes",
      "subMembers": [
        {
          "name": "Panes",
          "type": "uid: viz/chart:Panes",
          "default": null,
          "description": "Declares a collection of panes."
        },
        {
          "name": "height",
          "type": "Number | String | undefined",
          "default": "undefined",
          "description": "Specifies the pane's height (or width when the chart is [rotated]) in a [multi-pane chart]."
        },
        {
          "name": "name",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the name of the pane."
        }
      ]
    },
    {
      "name": "PointClickEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [pointClick] event handler's argument."
    },
    {
      "name": "PointHoverChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [pointHoverChanged] event handler's argument."
    },
    {
      "name": "PointSelectionChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [pointSelectionChanged] event handler's argument."
    },
    {
      "name": "SeriesClickEvent",
      "subMembers": [
        {
          "name": "SeriesClickEvent",
          "type": "Object",
          "default": null,
          "description": "The type of the [seriesClick] event handler's argument."
        },
        {
          "name": "target",
          "type": "chartSeriesObject",
          "default": null,
          "description": null
        }
      ]
    },
    {
      "name": "SeriesHoverChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [seriesHoverChanged] event handler's argument."
    },
    {
      "name": "SeriesInteractionInfo",
      "subMembers": [
        {
          "name": "SeriesInteractionInfo",
          "type": null,
          "default": null,
          "description": null
        },
        {
          "name": "target",
          "type": "chartSeriesObject",
          "default": null,
          "description": null
        }
      ]
    },
    {
      "name": "SeriesSelectionChangedEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [seriesSelectionChanged] event handler's argument."
    },
    {
      "name": "Tooltip",
      "subMembers": [
        {
          "name": "Tooltip",
          "type": "module: viz/chart",
          "default": null,
          "description": null
        },
        {
          "name": "location",
          "type": "Enums.ChartTooltipLocation",
          "default": "'center'",
          "description": "Specifies whether the tooltip must be located in the center of a series point or on its edge. Applies to bar-like and bubble series only."
        }
      ]
    },
    {
      "name": "TooltipHiddenEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [tooltipHidden] event handler's argument."
    },
    {
      "name": "TooltipShownEvent",
      "type": "Object",
      "default": null,
      "description": "The type of the [tooltipShown] event handler's argument."
    },
    {
      "name": "ValueAxis",
      "subMembers": [
        {
          "name": "ValueAxis",
          "type": "uid: viz/chart:ValueAxis",
          "default": null,
          "description": "Configures the value axis."
        },
        {
          "name": "autoBreaksEnabled",
          "type": "Boolean",
          "default": "false",
          "description": "Enables auto-calculated scale breaks. Applies only if the axis' [type] is *\"continuous\"* or *\"logarithmic\"* and [valueType] is *\"numeric\"*."
        },
        {
          "name": "axisDivisionFactor",
          "type": "Number",
          "default": "40",
          "description": "Specifies the minimum distance between two neighboring major ticks in pixels. Applies only to the axes of the *\"continuous\"* and *\"logarithmic\"* [types]."
        },
        {
          "name": "breaks",
          "type": "Array<ScaleBreak>",
          "default": "undefined",
          "description": "Declares a custom scale break collection. Applies only if the axis' [type] is *\"continuous\"* or *\"logarithmic\"*."
        },
        {
          "name": "categories",
          "type": "Array<Number, String, Date>",
          "default": null,
          "description": "Specifies the order of categories on an axis of the *\"discrete\"* [type]."
        },
        {
          "name": "constantLineStyle",
          "type": "Object",
          "default": null,
          "description": "Specifies the appearance of those constant lines that belong to the value axis."
        },
        {
          "name": "constantLines",
          "type": "Array<Object>",
          "default": null,
          "description": "Declares a collection of constant lines belonging to the value axis."
        },
        {
          "name": "customPosition",
          "type": "Number | Date | String | undefined",
          "default": "undefined",
          "description": "Specifies the position of the value axis on the argument axis."
        },
        {
          "name": "endOnTick",
          "type": "Boolean | undefined",
          "default": "undefined",
          "description": "Specifies whether to force the axis to start and end on ticks."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures the labels of the value axis."
        },
        {
          "name": "linearThreshold",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies a value used to calculate the range on a [logarithmic axis] within which the axis should be linear. Applies only if the data source contains negative values or zeroes."
        },
        {
          "name": "logarithmBase",
          "type": "Number",
          "default": "10",
          "description": "Specifies the value to be raised to a power when generating ticks for an axis of the  *\"logarithmic\"* [type]."
        },
        {
          "name": "maxAutoBreakCount",
          "type": "Number",
          "default": "4",
          "description": "Sets a limit on [auto-calculated scale breaks]. [Custom scale breaks] are not counted."
        },
        {
          "name": "minVisualRangeLength",
          "type": "Number | Object | Enums.TimeInterval | undefined",
          "default": "undefined",
          "description": "Specifies the minimum length of the [visual range]."
        },
        {
          "name": "minorTickCount",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies how many [minor ticks] to place between two neighboring major ticks."
        },
        {
          "name": "minorTickInterval",
          "type": "Number | Object | Enums.TimeInterval",
          "default": null,
          "description": "Specifies the interval between [minor ticks]. Applies only to [continuous axes]."
        },
        {
          "name": "multipleAxesSpacing",
          "type": "Number",
          "default": "5",
          "description": "Adds a pixel-measured empty space between two side-by-side value axes. Applies if several value axes are [located on one side] of the chart."
        },
        {
          "name": "name",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the name of the value axis."
        },
        {
          "name": "offset",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Specifies the shift in pixels of the value axis."
        },
        {
          "name": "pane",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Binds the value axis to a [pane]."
        },
        {
          "name": "position",
          "type": "Enums.Position",
          "default": "'left'",
          "description": "Relocates the value axis."
        },
        {
          "name": "showZero",
          "type": "Boolean | undefined",
          "default": "undefined",
          "description": "Specifies whether or not to show zero on the value axis."
        },
        {
          "name": "strips",
          "type": "Array<Object>",
          "default": null,
          "description": "Declares a collection of strips belonging to the value axis."
        },
        {
          "name": "synchronizedValue",
          "type": "Number | undefined",
          "default": "undefined",
          "description": "Synchronizes two or more value axes with each other at a specific value."
        },
        {
          "name": "tickInterval",
          "type": "Number | Object | Enums.TimeInterval",
          "default": null,
          "description": "Specifies the interval between [major ticks]. Does not apply to [discrete axes]."
        },
        {
          "name": "title",
          "type": "String | Object",
          "default": null,
          "description": "Configures the axis title."
        },
        {
          "name": "type",
          "type": "Enums.AxisScaleType | undefined",
          "default": "undefined",
          "description": "Specifies the type of the value axis."
        },
        {
          "name": "valueType",
          "type": "Enums.ChartsDataType | undefined",
          "default": "undefined",
          "description": "Casts values to a specified data type."
        },
        {
          "name": "visualRange",
          "type": "Object | Array<Number, String, Date>",
          "default": null,
          "description": "Defines the axis' displayed range. Cannot be wider than the [wholeRange]."
        },
        {
          "name": "visualRangeUpdateMode",
          "type": "Enums.ValueAxisVisualRangeUpdateMode",
          "default": "'auto'",
          "description": "Specifies how the axis's [visual range] should behave when chart data is updated."
        },
        {
          "name": "wholeRange",
          "type": "Object | Array<Number, String, Date> | undefined",
          "default": "undefined",
          "description": "Defines the range where the axis can be [zoomed and panned]."
        }
      ]
    },
    {
      "name": "ValueAxisConstantLineStyle",
      "subMembers": [
        {
          "name": "ValueAxisConstantLineStyle",
          "type": "module: viz/chart",
          "default": null,
          "description": "Specifies the appearance of those constant lines that belong to the value axis."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Specifies the appearance of the labels of those constant lines that belong to the value axis."
        }
      ]
    },
    {
      "name": "ValueAxisConstantLineStyleLabel",
      "subMembers": [
        {
          "name": "ValueAxisConstantLineStyleLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Specifies the appearance of the labels of those constant lines that belong to the value axis."
        },
        {
          "name": "horizontalAlignment",
          "type": "Enums.HorizontalAlignment",
          "default": "'left'",
          "description": "Aligns constant line labels in the horizontal direction."
        },
        {
          "name": "verticalAlignment",
          "type": "Enums.VerticalAlignment",
          "default": "'top'",
          "description": "Aligns constant line labels in the vertical direction."
        }
      ]
    },
    {
      "name": "ValueAxisConstantLines",
      "subMembers": [
        {
          "name": "ValueAxisConstantLines",
          "type": "uid: viz/chart:ValueAxisConstantLines",
          "default": null,
          "description": "Declares a collection of constant lines belonging to the value axis."
        },
        {
          "name": "displayBehindSeries",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether to display the constant line behind or in front of the series."
        },
        {
          "name": "extendAxis",
          "type": "Boolean",
          "default": "false",
          "description": "Specifies whether to extend the axis's default [visual range] to display the constant line."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures the constant line label."
        },
        {
          "name": "value",
          "type": "Number | Date | String | undefined",
          "default": "undefined",
          "description": "Specifies the value indicated by a constant line. Setting this property is necessary."
        }
      ]
    },
    {
      "name": "ValueAxisConstantLinesLabel",
      "subMembers": [
        {
          "name": "ValueAxisConstantLinesLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the constant line label."
        },
        {
          "name": "horizontalAlignment",
          "type": "Enums.HorizontalAlignment",
          "default": "'left'",
          "description": "Aligns constant line labels in the horizontal direction."
        },
        {
          "name": "text",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the text of a constant line label. By default, equals to the value of the constant line."
        },
        {
          "name": "verticalAlignment",
          "type": "Enums.VerticalAlignment",
          "default": "'top'",
          "description": "Aligns constant line labels in the vertical direction."
        }
      ]
    },
    {
      "name": "ValueAxisLabel",
      "subMembers": [
        {
          "name": "ValueAxisLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the labels of the value axis."
        },
        {
          "name": "customizeHint",
          "type": "function(axisValue)",
          "default": null,
          "description": "Specifies the hint that appears when a user points to an axis label."
        },
        {
          "name": "customizeText",
          "type": "function(axisValue)",
          "default": null,
          "description": "Customizes the text displayed by axis labels."
        },
        {
          "name": "format",
          "type": "Format | undefined",
          "default": "undefined",
          "description": "Formats a value before it is displayed in an axis label."
        }
      ]
    },
    {
      "name": "ValueAxisStrips",
      "subMembers": [
        {
          "name": "ValueAxisStrips",
          "type": "uid: viz/chart:ValueAxisStrips",
          "default": null,
          "description": "Declares a collection of strips belonging to the value axis."
        },
        {
          "name": "color",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the color of the strip."
        },
        {
          "name": "endValue",
          "type": "Number | Date | String | undefined",
          "default": "undefined",
          "description": "Along with the **startValue** property, limits the strip."
        },
        {
          "name": "label",
          "type": "Object",
          "default": null,
          "description": "Configures the strip label."
        },
        {
          "name": "startValue",
          "type": "Number | Date | String | undefined",
          "default": "undefined",
          "description": "Along with the **endValue** property, limits the strip."
        }
      ]
    },
    {
      "name": "ValueAxisStripsLabel",
      "subMembers": [
        {
          "name": "ValueAxisStripsLabel",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the strip label."
        },
        {
          "name": "text",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the text of the strip label."
        }
      ]
    },
    {
      "name": "ValueAxisTitle",
      "subMembers": [
        {
          "name": "ValueAxisTitle",
          "type": "module: viz/chart",
          "default": null,
          "description": "Configures the axis title."
        },
        {
          "name": "text",
          "type": "String | undefined",
          "default": "undefined",
          "description": "Specifies the text of the axis title."
        }
      ]
    },
    {
      "name": "ZoomEndEvent",
      "subMembers": [
        {
          "name": "ZoomEndEvent",
          "type": "Object",
          "default": null,
          "description": "The type of the [zoomEnd] event handler's argument."
        },
        {
          "name": "actionType",
          "type": "Enums.ZoomPanAction",
          "default": null,
          "description": null
        },
        {
          "name": "axis",
          "type": "chartAxisObject",
          "default": null,
          "description": null
        },
        {
          "name": "previousRange",
          "type": "Object",
          "default": null,
          "description": null
        },
        {
          "name": "range",
          "type": "Object",
          "default": null,
          "description": null
        },
        {
          "name": "rangeEnd",
          "type": "Date | Number",
          "default": null,
          "description": null
        },
        {
          "name": "rangeStart",
          "type": "Date | Number",
          "default": null,
          "description": null
        },
        {
          "name": "shift",
          "type": "Number",
          "default": null,
          "description": null
        },
        {
          "name": "zoomFactor",
          "type": "Number",
          "default": null,
          "description": null
        }
      ]
    },
    {
      "name": "ZoomStartEvent",
      "subMembers": [
        {
          "name": "ZoomStartEvent",
          "type": "Object",
          "default": null,
          "description": "The type of the [zoomStart] event handler's argument."
        },
        {
          "name": "actionType",
          "type": "Enums.ZoomPanAction",
          "default": null,
          "description": null
        },
        {
          "name": "axis",
          "type": "chartAxisObject",
          "default": null,
          "description": null
        },
        {
          "name": "range",
          "type": "Object",
          "default": null,
          "description": null
        }
      ]
    }
  ]
}